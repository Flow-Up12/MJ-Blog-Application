{"ast":null,"code":"var _jsxFileName = \"/Users/marcos/Desktop/MJ-Blog-Application/src/ProfileFeed.js\",\n  _s = $RefreshSig$();\nimport Post from './Post';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MyPost = ({\n  posts\n}) => {\n  _s();\n  const [profilePost, setProfilePost] = useState([]);\n  const userFilteredResults = filteredResults.filter(post => post.username === usernameInput);\n  setProfilePost(userFilteredResults);\n\n  // Sort the posts by the datetime property in ascending order\n  const sortedPosts = profilePost.slice().sort((b, a) => {\n    const dateA = new Date(a.datetime);\n    const dateB = new Date(b.datetime);\n    return dateA - dateB;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: sortedPosts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_s(MyPost, \"x9JFp/4W46q69XPl6faPYjDlVEo=\");\n_c = MyPost;\nexport default MyPost;\nvar _c;\n$RefreshReg$(_c, \"MyPost\");","map":{"version":3,"names":["Post","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","MyPost","posts","_s","profilePost","setProfilePost","userFilteredResults","filteredResults","filter","post","username","usernameInput","sortedPosts","slice","sort","b","a","dateA","Date","datetime","dateB","children","map","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/marcos/Desktop/MJ-Blog-Application/src/ProfileFeed.js"],"sourcesContent":["import Post from './Post';\nimport { useState } from 'react';\n\nconst MyPost = ({ posts}) => {\n    const [profilePost, setProfilePost] = useState([])\n      const userFilteredResults = filteredResults.filter(\n        (post) => post.username === usernameInput\n      );\n      setProfilePost(userFilteredResults);\n\n     \n  // Sort the posts by the datetime property in ascending order\n  const sortedPosts = profilePost.slice().sort((b,a) => {\n    const dateA = new Date(a.datetime);\n    const dateB = new Date(b.datetime);\n    return dateA - dateB;\n  });\n\n  return (\n    <>\n      {sortedPosts.map((post) => (\n        <Post key={post.id} post={post}/>\n      ))}\n    </>\n  );\n};\n\nexport default MyPost;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,QAAQ;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMU,mBAAmB,GAAGC,eAAe,CAACC,MAAM,CAC/CC,IAAI,IAAKA,IAAI,CAACC,QAAQ,KAAKC,aAC9B,CAAC;EACDN,cAAc,CAACC,mBAAmB,CAAC;;EAGvC;EACA,MAAMM,WAAW,GAAGR,WAAW,CAACS,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAK;IACpD,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAACF,CAAC,CAACG,QAAQ,CAAC;IAClC,MAAMC,KAAK,GAAG,IAAIF,IAAI,CAACH,CAAC,CAACI,QAAQ,CAAC;IAClC,OAAOF,KAAK,GAAGG,KAAK;EACtB,CAAC,CAAC;EAEF,oBACEtB,OAAA,CAAAE,SAAA;IAAAqB,QAAA,EACGT,WAAW,CAACU,GAAG,CAAEb,IAAI,iBACpBX,OAAA,CAACH,IAAI;MAAec,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACc,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CACjC;EAAC,gBACF,CAAC;AAEP,CAAC;AAACxB,EAAA,CAtBIF,MAAM;AAAA2B,EAAA,GAAN3B,MAAM;AAwBZ,eAAeA,MAAM;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}