{"ast":null,"code":"var _jsxFileName = \"/Users/marcos/Desktop/blog-appp/src/App.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [search, setSearch] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [postTitle, setPostTitle] = useState('');\n  const [postBody, setPostBody] = useState('');\n  const [editTitle, setEditTitle] = useState('');\n  const [editBody, setEditBody] = useState('');\n  const navigate = useNavigate();\n  const [emailInput, setEmailInput] = useState('');\n  const [usernameInput, setUsernameInput] = useState('');\n  const [passwordInput, setPasswordInput] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [myPost, setMyPost] = useState([]);\n  const [isSigningUp, setIsSigningUp] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const postCollection = collection(database, 'posts');\n      const querySnapshot = await getDocs(postCollection);\n      const fetchedPosts = [];\n      querySnapshot.forEach(doc => {\n        fetchedPosts.push(doc.data());\n      });\n      setPosts(fetchedPosts);\n    };\n    fetchPosts();\n  }, []);\n  useEffect(() => {\n    const fetchUserData = async () => {\n      const userCollection = collection(database, 'users');\n      const querySnapshot = await getDocs(userCollection);\n      const fetchUserDatas = [];\n      querySnapshot.forEach(doc => {\n        fetchUserDatas.push(doc.data().username);\n      });\n      setUsers(fetchUserDatas);\n    };\n    const storedIsLoggedIn = localStorage.getItem('isLoggedIn');\n    if (storedIsLoggedIn === 'true') {\n      setIsLoggedIn(true);\n      const storedUsername = localStorage.getItem('username');\n      setUsernameInput(storedUsername);\n    }\n\n    // Simulate a 2-second timeout before setting isLoading to false\n    const timeout = setTimeout(() => {\n      setIsLoading(false);\n    }, 2000);\n    fetchUserData();\n    return () => clearTimeout(timeout); // Cleanup the timeout on component unmount\n  }, []);\n\n  // Save isLoggedIn and current username to local storage whenever they change\n\n  useEffect(() => {\n    localStorage.setItem('isLoggedIn', isLoggedIn.toString());\n    localStorage.setItem('username', usernameInput);\n  }, [isLoggedIn, usernameInput]);\n  useEffect(() => {\n    const filteredResults = posts.filter(post => post.body.toLowerCase().includes(search.toLowerCase()) || post.title.toLowerCase().includes(search.toLowerCase()));\n    const userFilteredResults = filteredResults.filter(post => post.username === usernameInput);\n    setSearchResults(filteredResults.reverse());\n    setMyPost(userFilteredResults);\n  }, [posts, search, usernameInput]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const id = posts.length ? posts[posts.length - 1].id + 1 : 1;\n    const datetime = format(new Date(), 'MMMM dd, yyyy pp');\n    const newPost = {\n      id,\n      username: usernameInput,\n      title: postTitle,\n      datetime,\n      body: postBody\n    };\n    try {\n      const postCollection = collection(database, 'posts');\n      await addDoc(postCollection, newPost);\n\n      // Update state with the new post\n      setPosts(prevPosts => [...prevPosts, newPost]);\n      setPostTitle('');\n      setPostBody('');\n      navigate('/');\n    } catch (err) {\n      console.log(`Error ${err.message}`);\n    }\n  };\n  const handleEdit = async id => {\n    const datetime = format(new Date(), 'MMMM dd, yyyy pp');\n    const updatedPost = {\n      id,\n      username: emailInput,\n      title: editTitle,\n      datetime,\n      body: editBody\n    };\n    try {\n      const response = await api.put(`/posts/${id}`, updatedPost);\n      setPosts(posts.map(post => post.id === id ? {\n        ...response.data\n      } : post));\n      setEditTitle('');\n      setEditBody('');\n      navigate(\"/\");\n    } catch (err) {\n      console.log(`Error: ${err.message}`);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      const postRef = doc(database, 'posts', id);\n      await deleteDoc(postRef);\n      const updatedPosts = posts.filter(post => post.id !== id);\n      setPosts(updatedPosts);\n      navigate('/');\n    } catch (err) {\n      console.log(`Error ${err.message}`);\n    }\n  };\n  const handleSignOut = e => {\n    e.preventDefault();\n    auth.signOut().then(() => {\n      setIsLoggedIn(false);\n      setEmailInput('');\n      setUsernameInput('');\n      setPasswordInput('');\n      alert(\"You were signed out.\");\n    });\n  };\n  const handleSignIn = async e => {\n    try {\n      await signInWithEmailAndPassword(auth, emailInput, passwordInput);\n\n      // Retrieve the username from Firestore using the email\n      const querySnapshot = await getDocs(query(collection(database, 'usernames'), where('userId', '==', auth.currentUser.uid)));\n      if (!querySnapshot.empty) {\n        querySnapshot.forEach(doc => {\n          setUsernameInput(doc.data().username);\n        });\n      }\n      setIsLoggedIn(true);\n      setPasswordInput('');\n      navigate(\"/\");\n      console.log(usernameInput);\n    } catch (error) {\n      alert(\"Invalid username or password. Please try again.\");\n      console.log(error.message);\n    }\n  };\n  const handleSignUp = async e => {\n    try {\n      // Check if the username is already taken\n      const querySnapshot = await getDocs(query(collection(database, 'usernames'), where('username', '==', usernameInput)));\n      if (!querySnapshot.empty) {\n        alert(\"Username Taken\");\n      } else {\n        // Sign up the user using Firebase authentication\n        await createUserWithEmailAndPassword(auth, emailInput, passwordInput);\n\n        // Add user information to Firestore collection\n        const userCollection = collection(database, 'usernames'); // 'usernames' is the name of your collection\n        const newUser = {\n          userId: auth.currentUser.uid,\n          // Firebase UID of the user\n          username: usernameInput\n        };\n        await addDoc(userCollection, newUser);\n        setIsSigningUp(false);\n        setIsLoggedIn(true);\n        alert(\"You were signed up.\");\n        navigate('/');\n      }\n    } catch (error) {\n      alert(\"Username taken or invalid input. Please try again.\");\n      console.log(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!isLoggedIn && !isSigningUp && !isLoading && /*#__PURE__*/_jsxDEV(SignIn, {\n      handleSignIn: handleSignIn,\n      setEmailInput: setEmailInput,\n      emailInput: emailInput,\n      passwordInput: passwordInput,\n      setPasswordInput: setPasswordInput,\n      setIsSigningUp: setIsSigningUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }, this), isSigningUp && /*#__PURE__*/_jsxDEV(SignUp, {\n      usernameInput: usernameInput,\n      setUsernameInput: setUsernameInput,\n      handleSignUp: handleSignUp,\n      setEmailInput: setEmailInput,\n      passwordInput: passwordInput,\n      setPasswordInput: setPasswordInput,\n      emailInput: emailInput,\n      setIsSigningUp: setIsSigningUp,\n      setIsLoggedIn: setIsLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }, this), isLoggedIn && !isSigningUp && /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Layout, {\n          search: search,\n          setSearch: setSearch,\n          usernameInput: usernameInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 22\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            posts: searchResults,\n            usernameInput: usernameInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"myPost\",\n          element: /*#__PURE__*/_jsxDEV(MyPostDisplay, {\n            posts: searchResults,\n            usernameInput: usernameInput,\n            myPost: myPost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"post\",\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            index: true,\n            element: /*#__PURE__*/_jsxDEV(NewPost, {\n              handleSubmit: handleSubmit,\n              postTitle: postTitle,\n              setPostTitle: setPostTitle,\n              postBody: postBody,\n              setPostBody: setPostBody\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/post/edit/:id\",\n            element: /*#__PURE__*/_jsxDEV(EditPost, {\n              posts: posts,\n              handleEdit: handleEdit,\n              editTitle: editTitle,\n              setEditTitle: setEditTitle,\n              editBody: editBody,\n              setEditBody: setEditBody\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \":id\",\n            element: /*#__PURE__*/_jsxDEV(PostPage, {\n              usernameInput: usernameInput,\n              posts: posts,\n              handleDelete: handleDelete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"settings\",\n          element: /*#__PURE__*/_jsxDEV(Settings, {\n            handleSignOut: handleSignOut\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Missing, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"puSOE+H0slRpxw4+OnYnHGh7XQI=\", true);\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","_s","posts","setPosts","useState","users","setUsers","search","setSearch","searchResults","setSearchResults","postTitle","setPostTitle","postBody","setPostBody","editTitle","setEditTitle","editBody","setEditBody","navigate","useNavigate","emailInput","setEmailInput","usernameInput","setUsernameInput","passwordInput","setPasswordInput","isLoggedIn","setIsLoggedIn","myPost","setMyPost","isSigningUp","setIsSigningUp","isLoading","setIsLoading","useEffect","fetchPosts","postCollection","collection","database","querySnapshot","getDocs","fetchedPosts","forEach","doc","push","data","fetchUserData","userCollection","fetchUserDatas","username","storedIsLoggedIn","localStorage","getItem","storedUsername","timeout","setTimeout","clearTimeout","setItem","toString","filteredResults","filter","post","body","toLowerCase","includes","title","userFilteredResults","reverse","handleSubmit","e","preventDefault","id","length","datetime","format","Date","newPost","addDoc","prevPosts","err","console","log","message","handleEdit","updatedPost","response","api","put","map","handleDelete","postRef","deleteDoc","updatedPosts","handleSignOut","auth","signOut","then","alert","handleSignIn","signInWithEmailAndPassword","query","where","currentUser","uid","empty","error","handleSignUp","createUserWithEmailAndPassword","newUser","userId","_jsxDEV","_Fragment","children","SignIn","fileName","_jsxFileName","lineNumber","columnNumber","SignUp","Routes","Route","path","element","Layout","index","Home","MyPostDisplay","NewPost","EditPost","PostPage","Settings","Missing","_c","$RefreshReg$"],"sources":["/Users/marcos/Desktop/blog-appp/src/App.js"],"sourcesContent":["function App() {\n  const [posts, setPosts] = useState([]);\n  const [users, setUsers] = useState([])\n  const [search, setSearch] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [postTitle, setPostTitle] = useState('');\n  const [postBody, setPostBody] = useState('');\n  const [editTitle, setEditTitle] = useState('');\n  const [editBody, setEditBody] = useState('');\n  const navigate = useNavigate();\n  const [emailInput, setEmailInput] = useState('');\n  const [usernameInput, setUsernameInput] = useState('');\n  const [passwordInput, setPasswordInput] = useState('');\n  const [isLoggedIn , setIsLoggedIn] = useState(false)\n  const [myPost, setMyPost] = useState([]);\n  const [isSigningUp, setIsSigningUp] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n\n  \n  useEffect(() => {\n    const fetchPosts = async () => {\n      const postCollection = collection(database, 'posts');\n      const querySnapshot = await getDocs(postCollection);\n\n      const fetchedPosts = [];\n      querySnapshot.forEach((doc) => {\n        fetchedPosts.push(doc.data());\n      });\n      setPosts(fetchedPosts);\n    };\n\n    fetchPosts();\n  }, []);\n\n \n  \n  useEffect(() => {\n    const fetchUserData = async () => {\n      const userCollection = collection(database, 'users');\n      const querySnapshot = await getDocs(userCollection);\n\n      const fetchUserDatas = [];\n      querySnapshot.forEach((doc) => {\n        fetchUserDatas.push(doc.data().username);\n      });\n\n      setUsers(fetchUserDatas);\n    };\n\n    const storedIsLoggedIn = localStorage.getItem('isLoggedIn');\n    if (storedIsLoggedIn === 'true') {\n      setIsLoggedIn(true);\n      const storedUsername = localStorage.getItem('username');\n      setUsernameInput(storedUsername);\n    }\n\n    // Simulate a 2-second timeout before setting isLoading to false\n    const timeout = setTimeout(() => {\n      setIsLoading(false);\n    }, 2000);\n    fetchUserData();\n    return () => clearTimeout(timeout); // Cleanup the timeout on component unmount\n  }, []);\n  \n  \n  // Save isLoggedIn and current username to local storage whenever they change\n  \n  \n  useEffect(() => {\n    localStorage.setItem('isLoggedIn', isLoggedIn.toString());\n    localStorage.setItem('username', usernameInput);\n  }, [isLoggedIn, usernameInput]);\n\n  \n  useEffect(() => {\n    const filteredResults = posts.filter((post) =>\n      ((post.body).toLowerCase()).includes(search.toLowerCase())\n      || ((post.title).toLowerCase()).includes(search.toLowerCase()));\n\n      const userFilteredResults = filteredResults.filter(\n        (post) => post.username === usernameInput\n      );\n\n    setSearchResults(filteredResults.reverse());\n    setMyPost(userFilteredResults);\n  }, [posts, search, usernameInput])\n\n  const handleSubmit = async(e) => {\n    e.preventDefault();\n    \n    const id = posts.length ? posts[posts.length - 1].id + 1 : 1;\n    const datetime = format(new Date(), 'MMMM dd, yyyy pp');\n    const newPost = { id, username: usernameInput, title: postTitle, datetime, body: postBody };\n    try {\n      const postCollection = collection(database, 'posts');\n      await addDoc(postCollection, newPost);\n  \n      // Update state with the new post\n    setPosts((prevPosts) => [...prevPosts, newPost]);\n    setPostTitle('');\n    setPostBody('');\n    navigate('/');  \n    \n    } catch (err) {\n      console.log(`Error ${err.message}`);\n    }\n\n  }\n\n  const handleEdit = async (id) => {\n    const datetime = format(new Date(), 'MMMM dd, yyyy pp');\n    const updatedPost = { id, username: emailInput,title: editTitle, datetime, body: editBody };\n    try {\n      const response = await api.put(`/posts/${id}`, updatedPost);\n      setPosts(posts.map(post => post.id === id ? { ...response.data } : post));\n      setEditTitle('');\n      setEditBody('');\n      navigate(\"/\")\n    } catch (err) {\n      console.log(`Error: ${err.message}`);\n    }\n  }\n  const handleDelete = async (id) => {\n    try {\n      const postRef = doc(database, 'posts', id);\n      await deleteDoc(postRef);\n  \n      const updatedPosts = posts.filter(post => post.id !== id);\n      setPosts(updatedPosts);\n      navigate('/');\n    } catch (err) {\n      console.log(`Error ${err.message}`);\n    }\n  };\n\n  const handleSignOut = (e) => {\n    e.preventDefault();\n    auth.signOut().then(() => {\n      setIsLoggedIn(false);\n      setEmailInput('');\n      setUsernameInput('');\n      setPasswordInput('');\n      alert(\"You were signed out.\");\n    });\n  };\n   \n  const handleSignIn = async (e) => {\n    try {\n      await signInWithEmailAndPassword(auth, emailInput, passwordInput);\n  \n      // Retrieve the username from Firestore using the email\n      const querySnapshot = await getDocs(query(collection(database, 'usernames'), where('userId', '==',auth.currentUser.uid)));\n      if (!querySnapshot.empty) {\n        querySnapshot.forEach((doc) => {\n          setUsernameInput(doc.data().username);\n        });\n      }\n  \n      setIsLoggedIn(true);\n      setPasswordInput('');\n      navigate(\"/\");\n      console.log(usernameInput)\n    } catch (error) {\n      alert(\"Invalid username or password. Please try again.\");\n      console.log(error.message);\n    }\n  };\n  \n  \n    \n  const handleSignUp = async (e) => {\n    try {\n      // Check if the username is already taken\n      const querySnapshot = await getDocs(query(collection(database, 'usernames'), where('username', '==', usernameInput)));\n      if (!querySnapshot.empty) {\n        alert(\"Username Taken\");\n      } else {\n        // Sign up the user using Firebase authentication\n        await createUserWithEmailAndPassword(auth, emailInput, passwordInput);\n  \n        // Add user information to Firestore collection\n        const userCollection = collection(database, 'usernames'); // 'usernames' is the name of your collection\n        const newUser = {\n          userId: auth.currentUser.uid, // Firebase UID of the user\n          username: usernameInput,\n        };\n        await addDoc(userCollection, newUser);\n  \n        setIsSigningUp(false);\n        setIsLoggedIn(true);\n        alert(\"You were signed up.\");\n        navigate('/');\n      }\n    } catch (error) {\n      alert(\"Username taken or invalid input. Please try again.\");\n      console.log(error.message);\n    }\n  };\n  \n    \n    return (\n      <>\n       \n        {!isLoggedIn && !isSigningUp && !isLoading && (\n          <SignIn\n            handleSignIn={handleSignIn}\n            setEmailInput={setEmailInput}\n            emailInput = {emailInput}\n            passwordInput={passwordInput}\n            setPasswordInput={setPasswordInput}\n            setIsSigningUp={setIsSigningUp}\n          />\n        )}\n      \n        {isSigningUp && (\n          <SignUp\n            usernameInput= {usernameInput}\n            setUsernameInput= { setUsernameInput}\n            handleSignUp={handleSignUp}\n            setEmailInput={setEmailInput}\n            passwordInput={passwordInput}\n            setPasswordInput={setPasswordInput}\n            emailInput={emailInput}\n            setIsSigningUp={setIsSigningUp}\n            setIsLoggedIn={setIsLoggedIn}\n          />\n        )}\n    \n    {isLoggedIn && !isSigningUp && (\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<Layout search={search} setSearch={setSearch} usernameInput={usernameInput} />}\n          >\n            <Route index element={<Home posts={searchResults} usernameInput={usernameInput} />} />\n            <Route path=\"myPost\" element={<MyPostDisplay posts={searchResults} usernameInput={usernameInput} myPost={myPost} />} />\n\n            <Route path=\"post\">\n              <Route\n                index\n                element={\n                  <NewPost\n                    handleSubmit={handleSubmit}\n                    postTitle={postTitle}\n                    setPostTitle={setPostTitle}\n                    postBody={postBody}\n                    setPostBody={setPostBody}\n                  />\n                }\n              />\n              <Route\n                path=\"/post/edit/:id\"\n                element={(\n                  <EditPost\n                    posts={posts}\n                    handleEdit={handleEdit}\n                    editTitle={editTitle}\n                    setEditTitle={setEditTitle}\n                    editBody={editBody}\n                    setEditBody={setEditBody}\n                  />\n                )}\n              />\n              <Route\n                path=\":id\"\n                element={<PostPage usernameInput={usernameInput} posts={posts} handleDelete={handleDelete} />}\n              />\n            </Route>\n\n            <Route path=\"settings\" element={<Settings handleSignOut={handleSignOut} />} />\n\n            <Route path=\"*\" element={<Missing />} />\n          </Route>\n        </Routes>\n      )}\n    </>\n  );\n}\n  \nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}