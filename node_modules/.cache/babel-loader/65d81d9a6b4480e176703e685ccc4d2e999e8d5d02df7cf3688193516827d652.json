{"ast":null,"code":"var _jsxFileName = \"/Users/marcos/Desktop/MJ-Blog-Application/src/App.js\",\n  _s = $RefreshSig$();\nimport Layout from './Layout';\nimport Home from './Home';\nimport NewPost from './NewPost';\nimport PostPage from './PostPage';\nimport Settings from './Settings';\nimport Missing from './Missing';\nimport SignIn from './SignIn';\nimport SignUp from './SignUp';\nimport MyPostDisplay from './MyPostDisplay';\nimport EditPost from './EditPost';\nimport EditProfile from './EditProfile';\nimport Profile from './Profile';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport { auth, database } from './data/FireBase';\nimport { createUserWithEmailAndPassword, sendPasswordResetEmail, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { getDocs, addDoc, collection, query, where, updateDoc, deleteDoc } from 'firebase/firestore';\nimport { storage } from './data/FireBase';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport Search from './Search';\n//unique ids\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [search, setSearch] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [postTitle, setPostTitle] = useState('');\n  const [postBody, setPostBody] = useState('');\n  const [editTitle, setEditTitle] = useState('');\n  const [editBody, setEditBody] = useState('');\n  const navigate = useNavigate();\n  const [emailInput, setEmailInput] = useState('');\n  const [usernameInput, setUsernameInput] = useState('');\n  const [passwordInput, setPasswordInput] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [myPost, setMyPost] = useState([]);\n  const [user, setUser] = useState([]);\n  const [isSigningUp, setIsSigningUp] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedImage, setSelectedImage] = useState('');\n  const [userImg, setUserImg] = useState('');\n  const [name, setName] = useState('');\n  const [bio, setBio] = useState('');\n  const [editingProfile, setEditingProfile] = useState(false);\n  const [newUsername, setNewUsername] = useState();\n  const [profile, setProfile] = useState('');\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const postCollection = collection(database, 'posts');\n      const querySnapshot = await getDocs(postCollection);\n      const userCollection = collection(database, 'usernames');\n      const userQuerySnapshot = await getDocs(userCollection);\n      const fetchedPosts = [];\n      const fetchedUsers = [];\n      querySnapshot.forEach(doc => {\n        fetchedPosts.push(doc.data());\n      });\n      userQuerySnapshot.forEach(doc => {\n        fetchedUsers.push(doc.data().username);\n      });\n      setPosts(fetchedPosts);\n      setUsers(fetchedUsers);\n      console.log(fetchedPosts);\n      console.log(fetchedUsers);\n    };\n    fetchPosts();\n  }, []);\n  useEffect(() => {\n    if (isLoggedIn) {\n      const fetchUser = async () => {\n        try {\n          const querySnapshot = await getDocs(query(collection(database, 'usernames'), where('username', '==', usernameInput)));\n          if (!querySnapshot.empty && !editingProfile) {\n            // Since there could be multiple matching documents, let's consider the first one\n            const doc = querySnapshot.docs[0];\n            const userData = doc.data();\n            setUser(userData);\n            localStorage.setItem('userdata', userData);\n            if (userData.profileImg != null) {\n              setUserImg(userData.profileImg);\n              localStorage.setItem('userimg', userData.profileImg);\n            } else {\n              localStorage.setItem('userimg', 'user.png');\n            }\n            setBio(userData.bio);\n            setName(userData.name);\n            console.log(userData);\n          }\n        } catch (error) {\n          console.error('Error fetching user:', error);\n        }\n      };\n      fetchUser();\n    }\n  }, [usernameInput, isLoggedIn, editingProfile]);\n  useEffect(() => {\n    const storedIsLoggedIn = localStorage.getItem('isLoggedIn');\n    if (storedIsLoggedIn === 'true') {\n      setIsLoggedIn(true);\n      const storedUsername = localStorage.getItem('username');\n      setUsernameInput(storedUsername);\n      const StoredUserImg = localStorage.getItem('userimg');\n      if (StoredUserImg != null) {\n        setUserImg(StoredUserImg);\n      }\n    }\n\n    // Simulate a 2-second timeout before setting isLoading to false\n    const timeout = setTimeout(() => {\n      setIsLoading(false);\n    }, 2000);\n    return () => clearTimeout(timeout); // Cleanup the timeout on component unmount\n  }, []);\n\n  // Save isLoggedIn and current username to local storage whenever they change\n\n  useEffect(() => {\n    localStorage.setItem('isLoggedIn', isLoggedIn.toString());\n    localStorage.setItem('username', usernameInput);\n  }, [isLoggedIn, usernameInput]);\n  useEffect(() => {\n    const filteredResults = posts.filter(post => post.body.toLowerCase().includes(search.toLowerCase()) || post.title.toLowerCase().includes(search.toLowerCase()));\n    const userFilteredResults = filteredResults.filter(post => post.username === usernameInput);\n    setSearchResults(filteredResults.reverse());\n    setMyPost(userFilteredResults);\n  }, [posts, search, usernameInput, users]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const id = uuidv4();\n    const datetime = format(new Date(), 'MMMM dd, yyyy pp');\n    const newPost = {\n      id,\n      username: usernameInput,\n      title: postTitle,\n      datetime,\n      body: postBody,\n      imageUrl: selectedImage,\n      profileImg: userImg\n    };\n    try {\n      const postCollection = collection(database, 'posts');\n      await addDoc(postCollection, newPost);\n\n      // Update state with the new post\n      setPosts(prevPosts => [...prevPosts, newPost]);\n      setPostTitle('');\n      setPostBody('');\n      navigate('/');\n    } catch (err) {\n      console.log(`Error ${err.message}`);\n    }\n  };\n  const handleUserInfoSubmit = async e => {\n    try {\n      // Check if the username is already taken\n      const querySnapshot = await getDocs(query(collection(database, 'usernames'), where('username', '==', newUsername)));\n      if (!querySnapshot.empty && usernameInput !== newUsername) {\n        alert(\"Username Taken\");\n      } else {\n        // Update user profile information\n        const querySnapshot = await getDocs(query(collection(database, 'usernames'), where('username', '==', usernameInput)));\n        if (!querySnapshot.empty) {\n          querySnapshot.forEach(async doc => {\n            const userRef = doc.ref;\n            // Update the 'profileImg' field in the user document\n            await updateDoc(userRef, {\n              username: newUsername,\n              bio: bio,\n              name: name\n            });\n            setBio(bio);\n            setUsernameInput(newUsername);\n            setName(name);\n\n            // Update the username in user's posts\n            const updatedMyPosts = myPost.map(post => {\n              if (post.username === usernameInput) {\n                return {\n                  ...post,\n                  username: newUsername\n                };\n              }\n              return post;\n            });\n            setMyPost(updatedMyPosts);\n            alert(\"Profile saved\");\n          });\n        }\n        setEditingProfile(false);\n        navigate('/myProfile');\n      }\n    } catch (error) {\n      alert(\"Username taken or invalid input. Please try again.\");\n      console.log(error.message);\n    }\n  };\n  const handleProfileImgSubmit = async e => {\n    e.preventDefault();\n    try {\n      const querySnapshot = await getDocs(query(collection(database, 'usernames'), where('username', '==', usernameInput)));\n      if (!querySnapshot.empty) {\n        querySnapshot.forEach(async doc => {\n          const userRef = doc.ref;\n\n          // Update the 'profileImg' field in the user document\n          await updateDoc(userRef, {\n            profileImg: userImg\n          });\n          alert(\"user img changed\");\n        });\n      }\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  const handleEdit = async id => {\n    const datetime = format(new Date(), 'MMMM dd, yyyy pp');\n    const updatedPost = {\n      id,\n      username: usernameInput,\n      // Use usernameInput instead of emailInput\n      title: editTitle,\n      datetime,\n      body: editBody\n    };\n    try {\n      const querySnapshot = await getDocs(query(collection(database, 'posts'), where('id', '==', id)));\n      if (!querySnapshot.empty) {\n        querySnapshot.forEach(async doc => {\n          await updateDoc(doc.ref, updatedPost); // Use doc.ref to get the document reference\n        });\n      }\n\n      setPosts(prevPosts => prevPosts.map(post => post.id === id ? updatedPost : post));\n      setEditTitle('');\n      setEditBody('');\n      navigate('/');\n    } catch (err) {\n      console.log(`Error: ${err.message}`);\n    }\n  };\n  const handleImageChange = async e => {\n    if (e.target.files.length) {\n      const imageFile = e.target.files[0];\n      try {\n        // Upload the image to Firebase Storage\n        const storageRef = ref(storage, `${usernameInput}/` + imageFile.name);\n        await uploadBytes(storageRef, imageFile);\n\n        // Get the download URL for the uploaded image\n        const downloadURL = await getDownloadURL(storageRef);\n        setSelectedImage(downloadURL); // Update the selectedImage state\n      } catch (error) {\n        console.error('Error uploading image:', error);\n      }\n    }\n  };\n  const handleUserImg = async e => {\n    if (e.target.files.length) {\n      const imageFile = e.target.files[0];\n      try {\n        // Upload the image to Firebase Storage\n        const storageRef = ref(storage, `${usernameInput}/` + imageFile.name);\n        await uploadBytes(storageRef, imageFile);\n\n        // Get the download URL for the uploaded image\n        const downloadURL = await getDownloadURL(storageRef);\n        setUserImg(downloadURL); // Update the selectedImage state\n        localStorage.setItem('userimg', downloadURL);\n      } catch (error) {\n        console.error('Error uploading image:', error);\n      }\n    }\n  };\n  const handleDelete = async postId => {\n    try {\n      const querySnapshot = await getDocs(query(collection(database, 'posts'), where('id', '==', postId)));\n      if (!querySnapshot.empty) {\n        querySnapshot.forEach(async doc => {\n          await deleteDoc(doc.ref); // Use doc.ref to get the document reference\n        });\n      }\n\n      // Update state by removing the deleted post\n      setPosts(prevPosts => prevPosts.filter(post => post.id !== postId));\n      navigate(\"/\");\n    } catch (err) {\n      console.log(`Error ${err.message}`);\n    }\n  };\n  const handleSignOut = e => {\n    e.preventDefault();\n    auth.signOut().then(() => {\n      setIsLoggedIn(false);\n      setEmailInput('');\n      setUsernameInput('');\n      setPasswordInput('');\n      setUserImg('');\n      localStorage.setItem('username', '');\n      localStorage.setItem('userimg', '');\n      alert(\"You were signed out.\");\n    });\n  };\n  const handleSignIn = async e => {\n    try {\n      await signInWithEmailAndPassword(auth, emailInput, passwordInput);\n\n      // Retrieve the username from Firestore using the email\n      const querySnapshot = await getDocs(query(collection(database, 'usernames'), where('userId', '==', auth.currentUser.uid)));\n      if (!querySnapshot.empty) {\n        querySnapshot.forEach(doc => {\n          const userData = doc.data();\n          console.log('User Data:', userData);\n          setUsernameInput(userData.username);\n          setUser({\n            userData\n          });\n        });\n      }\n      console.log(user);\n      setIsLoggedIn(true);\n      setPasswordInput('');\n      navigate(\"/\");\n    } catch (error) {\n      alert(\"Invalid username or password. Please try again.\");\n      console.log(error.message);\n    }\n  };\n  const handleSignUp = async e => {\n    try {\n      // Check if the username is already taken\n      const querySnapshot = await getDocs(query(collection(database, 'usernames'), where('username', '==', usernameInput)));\n      if (!querySnapshot.empty) {\n        alert(\"Username Taken\");\n      } else {\n        // Sign up the user using Firebase authentication\n        await createUserWithEmailAndPassword(auth, emailInput, passwordInput);\n\n        // Add user information to Firestore collection\n        const userCollection = collection(database, 'usernames'); // 'usernames' is the name of your collection\n        const newUser = {\n          userId: auth.currentUser.uid,\n          // Firebase UID of the user\n          username: usernameInput\n        };\n        await addDoc(userCollection, newUser);\n        setUser({\n          newUser\n        });\n        setIsSigningUp(false);\n        setIsLoggedIn(true);\n        alert(\"You were signed up.\");\n        navigate('/');\n      }\n    } catch (error) {\n      alert(\"Username taken or invalid input. Please try again.\");\n      console.log(error.message);\n    }\n  };\n  const handlePasswordReset = email => {\n    sendPasswordResetEmail(auth, email).then(() => {}).catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(errorCode);\n      console.log(errorMessage);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!isLoggedIn && !isSigningUp && !isLoading && /*#__PURE__*/_jsxDEV(SignIn, {\n      handleSignIn: handleSignIn,\n      setEmailInput: setEmailInput,\n      emailInput: emailInput,\n      passwordInput: passwordInput,\n      setPasswordInput: setPasswordInput,\n      setIsSigningUp: setIsSigningUp,\n      handlePasswordReset: handlePasswordReset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 9\n    }, this), isSigningUp && /*#__PURE__*/_jsxDEV(SignUp, {\n      usernameInput: usernameInput,\n      setUsernameInput: setUsernameInput,\n      handleSignUp: handleSignUp,\n      setEmailInput: setEmailInput,\n      passwordInput: passwordInput,\n      setPasswordInput: setPasswordInput,\n      emailInput: emailInput,\n      setIsSigningUp: setIsSigningUp,\n      setIsLoggedIn: setIsLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 9\n    }, this), isLoggedIn && !isSigningUp && /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Layout, {\n          search: search,\n          setSearch: setSearch,\n          usernameInput: usernameInput,\n          userImg: userImg,\n          editingProfile: editingProfile,\n          setEditingProfile: setEditingProfile,\n          posts: posts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 22\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            posts: searchResults,\n            usernameInput: usernameInput,\n            setProfile: setProfile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile/:username\",\n          element: /*#__PURE__*/_jsxDEV(Profile, {\n            profile: profile,\n            setProfile: setProfile,\n            usernameInput: usernameInput,\n            posts: posts,\n            userImg: userImg,\n            bio: bio,\n            name: name,\n            setEditingProfile: setEditingProfile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"myProfile\",\n          element: /*#__PURE__*/_jsxDEV(MyPostDisplay, {\n            setProfile: setProfile,\n            posts: searchResults,\n            usernameInput: usernameInput,\n            myPost: myPost,\n            userImg: userImg,\n            bio: bio,\n            name: name,\n            setEditingProfile: setEditingProfile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/myProfile/editProfile\",\n          element: /*#__PURE__*/_jsxDEV(EditProfile, {\n            name: name,\n            usernameInput: usernameInput,\n            handleUserInfoSubmit: handleUserInfoSubmit,\n            setUserImg: setUserImg,\n            user: user,\n            setBio: setBio,\n            setName: setName,\n            setEditingProfile: setEditingProfile,\n            newUsername: newUsername,\n            setNewUsername: setNewUsername,\n            bio: bio,\n            userImg: userImg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 59\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"post\",\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            index: true,\n            element: /*#__PURE__*/_jsxDEV(NewPost, {\n              handleImageChange: handleImageChange,\n              handleSubmit: handleSubmit,\n              postTitle: postTitle,\n              setPostTitle: setPostTitle,\n              postBody: postBody,\n              setPostBody: setPostBody,\n              setSelectedImage: setSelectedImage,\n              selectedImage: selectedImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/post/edit/:id\",\n            element: /*#__PURE__*/_jsxDEV(EditPost, {\n              posts: posts,\n              handleEdit: handleEdit,\n              editTitle: editTitle,\n              setEditTitle: setEditTitle,\n              editBody: editBody,\n              setEditBody: setEditBody\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \":id\",\n            element: /*#__PURE__*/_jsxDEV(PostPage, {\n              usernameInput: usernameInput,\n              posts: posts,\n              handleDelete: handleDelete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"myProfile/settings\",\n          element: /*#__PURE__*/_jsxDEV(Settings, {\n            handleSignOut: handleSignOut,\n            handleUserImg: handleUserImg,\n            handleProfileImgSubmit: handleProfileImgSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"search\",\n          element: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Missing, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"E/KWHBHaBX1yuI8iBrCwBw1/NtY=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Layout","Home","NewPost","PostPage","Settings","Missing","SignIn","SignUp","MyPostDisplay","EditPost","EditProfile","Profile","Route","Routes","useNavigate","useState","useEffect","format","auth","database","createUserWithEmailAndPassword","sendPasswordResetEmail","signInWithEmailAndPassword","getDocs","addDoc","collection","query","where","updateDoc","deleteDoc","storage","ref","uploadBytes","getDownloadURL","Search","v4","uuidv4","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","posts","setPosts","users","setUsers","search","setSearch","searchResults","setSearchResults","postTitle","setPostTitle","postBody","setPostBody","editTitle","setEditTitle","editBody","setEditBody","navigate","emailInput","setEmailInput","usernameInput","setUsernameInput","passwordInput","setPasswordInput","isLoggedIn","setIsLoggedIn","myPost","setMyPost","user","setUser","isSigningUp","setIsSigningUp","isLoading","setIsLoading","selectedImage","setSelectedImage","userImg","setUserImg","name","setName","bio","setBio","editingProfile","setEditingProfile","newUsername","setNewUsername","profile","setProfile","fetchPosts","postCollection","querySnapshot","userCollection","userQuerySnapshot","fetchedPosts","fetchedUsers","forEach","doc","push","data","username","console","log","fetchUser","empty","docs","userData","localStorage","setItem","profileImg","error","storedIsLoggedIn","getItem","storedUsername","StoredUserImg","timeout","setTimeout","clearTimeout","toString","filteredResults","filter","post","body","toLowerCase","includes","title","userFilteredResults","reverse","handleSubmit","e","preventDefault","id","datetime","Date","newPost","imageUrl","prevPosts","err","message","handleUserInfoSubmit","alert","userRef","updatedMyPosts","map","handleProfileImgSubmit","handleEdit","updatedPost","handleImageChange","target","files","length","imageFile","storageRef","downloadURL","handleUserImg","handleDelete","postId","handleSignOut","signOut","then","handleSignIn","currentUser","uid","handleSignUp","newUser","userId","handlePasswordReset","email","catch","errorCode","code","errorMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","index","_c","$RefreshReg$"],"sources":["/Users/marcos/Desktop/MJ-Blog-Application/src/App.js"],"sourcesContent":["import Layout from './Layout';\nimport Home from './Home';\nimport NewPost from './NewPost';\nimport PostPage from './PostPage';\nimport Settings from './Settings';\nimport Missing from './Missing';\nimport SignIn from './SignIn';\nimport SignUp from './SignUp';\nimport MyPostDisplay from './MyPostDisplay';\nimport EditPost from './EditPost';\nimport EditProfile from './EditProfile';\nimport Profile from './Profile'\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport { auth, database } from './data/FireBase';\nimport { createUserWithEmailAndPassword, sendPasswordResetEmail, signInWithEmailAndPassword} from \"firebase/auth\";\nimport { getDocs, addDoc, collection, query, where, updateDoc, deleteDoc } from 'firebase/firestore';\nimport { storage } from './data/FireBase';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport Search from './Search';\n//unique ids\nimport { v4 as uuidv4 } from 'uuid';\n\n\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [search, setSearch] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [postTitle, setPostTitle] = useState('');\n  const [postBody, setPostBody] = useState('');\n  const [editTitle, setEditTitle] = useState('');\n  const [editBody, setEditBody] = useState('');\n  const navigate = useNavigate();\n  const [emailInput, setEmailInput] = useState('');\n  const [usernameInput, setUsernameInput] = useState('');\n  const [passwordInput, setPasswordInput] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [myPost, setMyPost] = useState([]);\n  const [user, setUser] = useState([]);\n  const [isSigningUp, setIsSigningUp] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedImage, setSelectedImage] = useState('');\n  const [userImg, setUserImg] = useState('');\n  const [name, setName] = useState('');\n  const [bio, setBio] = useState('');\n  const [editingProfile, setEditingProfile] = useState(false);\n  const [newUsername, setNewUsername] = useState();\n  const [profile, setProfile] = useState('');\n\n\n\n\n\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const postCollection = collection(database, 'posts');\n      const querySnapshot = await getDocs(postCollection);\n      const userCollection = collection(database, 'usernames');\n      const userQuerySnapshot = await getDocs(userCollection);\n\n      const fetchedPosts = [];\n      const fetchedUsers = [];\n      querySnapshot.forEach((doc) => {\n        fetchedPosts.push(doc.data());\n\n      });\n      userQuerySnapshot.forEach((doc) => {\n        fetchedUsers.push(doc.data().username);\n\n      });\n      setPosts(fetchedPosts);\n      setUsers(fetchedUsers);\n      console.log(fetchedPosts);\n      console.log(fetchedUsers);\n\n\n\n\n    };\n\n    fetchPosts();\n\n  }, []);\n\n  useEffect(() => {\n\n    if (isLoggedIn) {\n      const fetchUser = async () => {\n        try {\n          const querySnapshot = await getDocs(\n            query(collection(database, 'usernames'), where('username', '==', usernameInput))\n          );\n\n          if (!querySnapshot.empty && !editingProfile) {\n            // Since there could be multiple matching documents, let's consider the first one\n            const doc = querySnapshot.docs[0];\n            const userData = doc.data();\n            setUser(userData);\n            localStorage.setItem('userdata', userData);\n            if (userData.profileImg != null) {\n              setUserImg(userData.profileImg)\n              localStorage.setItem('userimg', userData.profileImg);\n            }\n            else {\n              localStorage.setItem('userimg', 'user.png');\n            }\n            setBio(userData.bio);\n            setName(userData.name);\n            console.log(userData);\n\n          }\n        } catch (error) {\n          console.error('Error fetching user:', error);\n        }\n      };\n\n      fetchUser();\n    }\n\n  }, [usernameInput, isLoggedIn, editingProfile,]);\n\n\n  useEffect(() => {\n\n    const storedIsLoggedIn = localStorage.getItem('isLoggedIn');\n    if (storedIsLoggedIn === 'true') {\n      setIsLoggedIn(true);\n      const storedUsername = localStorage.getItem('username');\n      setUsernameInput(storedUsername);\n      const StoredUserImg = localStorage.getItem('userimg');\n      if (StoredUserImg != null) {\n        setUserImg(StoredUserImg);\n      }\n\n\n    }\n\n\n\n\n\n    // Simulate a 2-second timeout before setting isLoading to false\n    const timeout = setTimeout(() => {\n      setIsLoading(false);\n    }, 2000);\n    return () => clearTimeout(timeout); // Cleanup the timeout on component unmount\n  }, []);\n\n\n  // Save isLoggedIn and current username to local storage whenever they change\n\n\n  useEffect(() => {\n    localStorage.setItem('isLoggedIn', isLoggedIn.toString());\n    localStorage.setItem('username', usernameInput);\n  }, [isLoggedIn, usernameInput]);\n\n\n  useEffect(() => {\n    const filteredResults = posts.filter((post) =>\n      ((post.body).toLowerCase()).includes(search.toLowerCase())\n      || ((post.title).toLowerCase()).includes(search.toLowerCase()));\n\n    const userFilteredResults = filteredResults.filter(\n      (post) => post.username === usernameInput\n    );\n\n\n    setSearchResults(filteredResults.reverse());\n    setMyPost(userFilteredResults);\n  }, [posts, search, usernameInput, users])\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const id = uuidv4();\n    const datetime = format(new Date(), 'MMMM dd, yyyy pp');\n    const newPost = { id, username: usernameInput, title: postTitle, datetime, body: postBody, imageUrl: selectedImage, profileImg: userImg };\n    try {\n      const postCollection = collection(database, 'posts');\n      await addDoc(postCollection, newPost);\n\n      // Update state with the new post\n      setPosts((prevPosts) => [...prevPosts, newPost]);\n      setPostTitle('');\n      setPostBody('');\n      navigate('/');\n\n\n    } catch (err) {\n      console.log(`Error ${err.message}`);\n    }\n\n  }\n\n  const handleUserInfoSubmit = async (e) => {\n    try {\n      // Check if the username is already taken\n      const querySnapshot = await getDocs(query(collection(database, 'usernames'), where('username', '==', newUsername)));\n      if (!querySnapshot.empty && usernameInput !== newUsername) {\n        alert(\"Username Taken\");\n      } else {\n        // Update user profile information\n        const querySnapshot = await getDocs(query(collection(database, 'usernames'), where('username', '==', usernameInput)));\n        if (!querySnapshot.empty) {\n          querySnapshot.forEach(async (doc) => {\n            const userRef = doc.ref;\n            // Update the 'profileImg' field in the user document\n            await updateDoc(userRef, { username: newUsername, bio: bio, name: name });\n            setBio(bio);\n            setUsernameInput(newUsername);\n            setName(name);\n\n            // Update the username in user's posts\n            const updatedMyPosts = myPost.map((post) => {\n              if (post.username === usernameInput) {\n                return { ...post, username: newUsername };\n              }\n              return post;\n            });\n            setMyPost(updatedMyPosts);\n\n            alert(\"Profile saved\");\n          });\n        }\n        setEditingProfile(false);\n        navigate('/myProfile');\n      }\n    } catch (error) {\n      alert(\"Username taken or invalid input. Please try again.\");\n      console.log(error.message);\n    }\n  };\n\n  const handleProfileImgSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const querySnapshot = await getDocs(query(collection(database, 'usernames'), where('username', '==', usernameInput)));\n      if (!querySnapshot.empty) {\n        querySnapshot.forEach(async (doc) => {\n          const userRef = doc.ref;\n\n          // Update the 'profileImg' field in the user document\n          await updateDoc(userRef, { profileImg: userImg });\n          alert(\"user img changed\");\n        });\n      }\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n\n\n  const handleEdit = async (id) => {\n    const datetime = format(new Date(), 'MMMM dd, yyyy pp');\n    const updatedPost = {\n      id,\n      username: usernameInput, // Use usernameInput instead of emailInput\n      title: editTitle,\n      datetime,\n      body: editBody,\n    };\n\n    try {\n      const querySnapshot = await getDocs(query(collection(database, 'posts'), where('id', '==', id)));\n\n      if (!querySnapshot.empty) {\n        querySnapshot.forEach(async (doc) => {\n          await updateDoc(doc.ref, updatedPost); // Use doc.ref to get the document reference\n        });\n      }\n\n      setPosts((prevPosts) =>\n        prevPosts.map((post) => (post.id === id ? updatedPost : post))\n      );\n      setEditTitle('');\n      setEditBody('');\n      navigate('/');\n    } catch (err) {\n      console.log(`Error: ${err.message}`);\n    }\n  };\n  const handleImageChange = async (e) => {\n\n    if (e.target.files.length) {\n      const imageFile = e.target.files[0];\n\n      try {\n        // Upload the image to Firebase Storage\n        const storageRef = ref(storage, `${usernameInput}/` + imageFile.name);\n        await uploadBytes(storageRef, imageFile);\n\n        // Get the download URL for the uploaded image\n        const downloadURL = await getDownloadURL(storageRef);\n\n        setSelectedImage(downloadURL); // Update the selectedImage state\n      } catch (error) {\n        console.error('Error uploading image:', error);\n      }\n    }\n  };\n  const handleUserImg = async (e) => {\n\n    if (e.target.files.length) {\n      const imageFile = e.target.files[0];\n\n      try {\n        // Upload the image to Firebase Storage\n        const storageRef = ref(storage, `${usernameInput}/` + imageFile.name);\n        await uploadBytes(storageRef, imageFile);\n\n        // Get the download URL for the uploaded image\n        const downloadURL = await getDownloadURL(storageRef);\n\n        setUserImg(downloadURL); // Update the selectedImage state\n        localStorage.setItem('userimg', downloadURL);\n      } catch (error) {\n        console.error('Error uploading image:', error);\n      }\n    }\n  };\n\n  const handleDelete = async (postId) => {\n    try {\n      const querySnapshot = await getDocs(query(collection(database, 'posts'), where('id', '==', postId)));\n\n      if (!querySnapshot.empty) {\n        querySnapshot.forEach(async (doc) => {\n          await deleteDoc(doc.ref); // Use doc.ref to get the document reference\n        });\n      }\n\n      // Update state by removing the deleted post\n      setPosts((prevPosts) => prevPosts.filter(post => post.id !== postId));\n      navigate(\"/\");\n    } catch (err) {\n      console.log(`Error ${err.message}`);\n    }\n  };\n\n  const handleSignOut = (e) => {\n    e.preventDefault();\n    auth.signOut().then(() => {\n      setIsLoggedIn(false);\n      setEmailInput('');\n      setUsernameInput('');\n      setPasswordInput('');\n      setUserImg('');\n      localStorage.setItem('username', '');\n      localStorage.setItem('userimg', '');\n      alert(\"You were signed out.\");\n    });\n  };\n\n  const handleSignIn = async (e) => {\n    try {\n      await signInWithEmailAndPassword(auth, emailInput, passwordInput);\n\n      // Retrieve the username from Firestore using the email\n      const querySnapshot = await getDocs(query(collection(database, 'usernames'), where('userId', '==', auth.currentUser.uid)));\n      if (!querySnapshot.empty) {\n        querySnapshot.forEach((doc) => {\n          const userData = doc.data();\n          console.log('User Data:', userData);\n          setUsernameInput(userData.username);\n          setUser({ userData });\n\n        });\n      }\n      console.log(user);\n      setIsLoggedIn(true);\n      setPasswordInput('');\n      navigate(\"/\");\n    } catch (error) {\n      alert(\"Invalid username or password. Please try again.\");\n      console.log(error.message);\n    }\n  };\n\n\n\n  const handleSignUp = async (e) => {\n    try {\n      // Check if the username is already taken\n      const querySnapshot = await getDocs(query(collection(database, 'usernames'), where('username', '==', usernameInput)));\n      if (!querySnapshot.empty) {\n        alert(\"Username Taken\");\n      } else {\n        // Sign up the user using Firebase authentication\n        await createUserWithEmailAndPassword(auth, emailInput, passwordInput);\n\n        // Add user information to Firestore collection\n        const userCollection = collection(database, 'usernames'); // 'usernames' is the name of your collection\n        const newUser = {\n          userId: auth.currentUser.uid, // Firebase UID of the user\n          username: usernameInput,\n        };\n        await addDoc(userCollection, newUser);\n        setUser({ newUser });\n        setIsSigningUp(false);\n        setIsLoggedIn(true);\n\n        alert(\"You were signed up.\");\n        navigate('/');\n      }\n    } catch (error) {\n      alert(\"Username taken or invalid input. Please try again.\");\n      console.log(error.message);\n    }\n  };\n\n  const handlePasswordReset = (email) => {\n   \n    sendPasswordResetEmail(auth, email)\n    .then(() => {\n    })\n    .catch((error) => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(errorCode)\n      console.log(errorMessage)\n    });\n  \n  };\n\n  return (\n    <>\n\n      {!isLoggedIn && !isSigningUp && !isLoading && (\n        <SignIn\n          handleSignIn={handleSignIn}\n          setEmailInput={setEmailInput}\n          emailInput={emailInput}\n          passwordInput={passwordInput}\n          setPasswordInput={setPasswordInput}\n          setIsSigningUp={setIsSigningUp}\n          handlePasswordReset={handlePasswordReset}\n        />\n      )}\n\n      {isSigningUp && (\n        <SignUp\n          usernameInput={usernameInput}\n          setUsernameInput={setUsernameInput}\n          handleSignUp={handleSignUp}\n          setEmailInput={setEmailInput}\n          passwordInput={passwordInput}\n          setPasswordInput={setPasswordInput}\n          emailInput={emailInput}\n          setIsSigningUp={setIsSigningUp}\n          setIsLoggedIn={setIsLoggedIn}\n        />\n      )}\n\n      {isLoggedIn && !isSigningUp && (\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<Layout search={search} setSearch={setSearch} usernameInput={usernameInput} userImg={userImg} editingProfile={editingProfile} setEditingProfile={setEditingProfile} posts={posts} />}\n          >\n            <Route index element={<Home posts={searchResults} usernameInput={usernameInput} setProfile={setProfile} />} />\n            <Route path=\"/profile/:username\" element={<Profile profile={profile} setProfile={setProfile} usernameInput={usernameInput} posts={posts} userImg={userImg} bio={bio} name={name} setEditingProfile={setEditingProfile} />} />\n            <Route path=\"myProfile\" element={<MyPostDisplay setProfile={setProfile} posts={searchResults} usernameInput={usernameInput} myPost={myPost} userImg={userImg} bio={bio} name={name} setEditingProfile={setEditingProfile} />} />\n            <Route path=\"/myProfile/editProfile\" element={<EditProfile name={name} usernameInput={usernameInput} handleUserInfoSubmit={handleUserInfoSubmit} setUserImg={setUserImg} user={user} setBio={setBio} setName={setName} setEditingProfile={setEditingProfile} newUsername={newUsername} setNewUsername={setNewUsername} bio={bio} userImg={userImg} />} />\n            <Route path=\"post\">\n              <Route\n                index\n                element={\n                  <NewPost\n                    handleImageChange={handleImageChange}\n                    handleSubmit={handleSubmit}\n                    postTitle={postTitle}\n                    setPostTitle={setPostTitle}\n                    postBody={postBody}\n                    setPostBody={setPostBody}\n                    setSelectedImage={setSelectedImage}\n                    selectedImage={selectedImage}\n                  />\n                }\n              />\n              <Route\n                path=\"/post/edit/:id\"\n                element={(\n                  <EditPost\n                    posts={posts}\n                    handleEdit={handleEdit}\n                    editTitle={editTitle}\n                    setEditTitle={setEditTitle}\n                    editBody={editBody}\n                    setEditBody={setEditBody}\n                  />\n                )}\n              />\n              <Route\n                path=\":id\"\n                element={<PostPage usernameInput={usernameInput} posts={posts} handleDelete={handleDelete} />}\n              />\n\n            </Route>\n\n            <Route path=\"myProfile/settings\" element={<Settings handleSignOut={handleSignOut} handleUserImg={handleUserImg} handleProfileImgSubmit={handleProfileImgSubmit} />} />\n            <Route path=\"search\" element={<Search/>}/>\n            <Route path=\"*\" element={<Missing />} />\n          </Route>\n        </Routes>\n      )}\n    </>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}