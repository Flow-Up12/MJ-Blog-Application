{"ast":null,"code":"var _jsxFileName = \"/Users/marcos/Desktop/MJ-Blog-Application/src/App.js\",\n  _s = $RefreshSig$();\nimport Layout from './Layout';\nimport Home from './Home';\nimport NewPost from './NewPost';\nimport PostPage from './PostPage';\nimport Settings from './Settings';\nimport Missing from './Missing';\nimport SignIn from './SignIn';\nimport SignUp from './SignUp';\nimport MyPostDisplay from './MyPostDisplay';\nimport EditPost from './EditPost';\nimport EditProfile from './EditProfile';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport { auth, database } from './data/FireBase';\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { getDocs, addDoc, collection, query, where, updateDoc, deleteDoc } from 'firebase/firestore';\nimport { storage } from './data/FireBase';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\n//unique ids\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [search, setSearch] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [postTitle, setPostTitle] = useState('');\n  const [postBody, setPostBody] = useState('');\n  const [editTitle, setEditTitle] = useState('');\n  const [editBody, setEditBody] = useState('');\n  const navigate = useNavigate();\n  const [emailInput, setEmailInput] = useState('');\n  const [usernameInput, setUsernameInput] = useState('');\n  const [passwordInput, setPasswordInput] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [myPost, setMyPost] = useState([]);\n  const [user, setUser] = useState([]);\n  const [isSigningUp, setIsSigningUp] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedImage, setSelectedImage] = useState('');\n  const [userImg, setUserImg] = useState('/user.png');\n  const [name, setName] = useState('');\n  const [bio, setBio] = useState('');\n  const [editingProfile, setEditingProfile] = useState(false);\n  const [newUsername, setNewUsername] = useState('');\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const postCollection = collection(database, 'posts');\n      const querySnapshot = await getDocs(postCollection);\n      const fetchedPosts = [];\n      querySnapshot.forEach(doc => {\n        fetchedPosts.push(doc.data());\n      });\n      setPosts(fetchedPosts);\n      console.log(fetchedPosts);\n    };\n    fetchPosts();\n  }, []);\n  useEffect(() => {\n    // Detect page reload\n    window.addEventListener('beforeunload', handlePageReload);\n\n    // Cleanup when the component unmounts\n    return () => {\n      window.removeEventListener('beforeunload', handlePageReload);\n    };\n    // eslint-disable-next-line\n  }, []);\n  const handlePageReload = e => {\n    // Prevent the default browser dialog\n    e.preventDefault();\n\n    // Redirect to the home page\n    navigate('/');\n  };\n  useEffect(() => {\n    if (isLoggedIn) {\n      const fetchUser = async () => {\n        try {\n          const querySnapshot = await getDocs(query(collection(database, 'usernames'), where('username', '==', usernameInput)));\n          if (!querySnapshot.empty && !editingProfile) {\n            // Since there could be multiple matching documents, let's consider the first one\n            const doc = querySnapshot.docs[0];\n            const userData = doc.data();\n            setUser(userData);\n            localStorage.setItem('userdata', userData);\n            if (userData.profileImg != null) {\n              setUserImg(userData.profileImg);\n              localStorage.setItem('userimg', userData.profileImg);\n            } else {\n              localStorage.setItem('userimg', 'user.png');\n            }\n            setBio(userData.bio);\n            setName(userData.name);\n            console.log(userData);\n          }\n        } catch (error) {\n          console.error('Error fetching user:', error);\n        }\n      };\n      fetchUser();\n    }\n  }, [usernameInput, isLoggedIn, editingProfile]);\n  useEffect(() => {\n    const storedIsLoggedIn = localStorage.getItem('isLoggedIn');\n    if (storedIsLoggedIn === 'true') {\n      setIsLoggedIn(true);\n      const storedUsername = localStorage.getItem('username');\n      setUsernameInput(storedUsername);\n      const StoredUserImg = localStorage.getItem('userimg');\n      if (StoredUserImg != null) {\n        setUserImg(StoredUserImg);\n      }\n      const StoredUserData = localStorage.getItem('userdata');\n      if (StoredUserData != null) {\n        setUserImg(StoredUserData);\n      }\n    }\n\n    // Simulate a 2-second timeout before setting isLoading to false\n    const timeout = setTimeout(() => {\n      setIsLoading(false);\n    }, 2000);\n    return () => clearTimeout(timeout); // Cleanup the timeout on component unmount\n  }, []);\n\n  // Save isLoggedIn and current username to local storage whenever they change\n\n  useEffect(() => {\n    localStorage.setItem('isLoggedIn', isLoggedIn.toString());\n    localStorage.setItem('username', usernameInput);\n  }, [isLoggedIn, usernameInput]);\n  useEffect(() => {\n    const filteredResults = posts.filter(post => post.body.toLowerCase().includes(search.toLowerCase()) || post.title.toLowerCase().includes(search.toLowerCase()));\n    const userFilteredResults = filteredResults.filter(post => post.username === usernameInput);\n    setSearchResults(filteredResults.reverse());\n    setMyPost(userFilteredResults);\n  }, [posts, search, usernameInput]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const id = uuidv4();\n    const datetime = format(new Date(), 'MMMM dd, yyyy pp');\n    const newPost = {\n      id,\n      username: usernameInput,\n      title: postTitle,\n      datetime,\n      body: postBody,\n      imageUrl: selectedImage\n    };\n    try {\n      const postCollection = collection(database, 'posts');\n      await addDoc(postCollection, newPost);\n\n      // Update state with the new post\n      setPosts(prevPosts => [...prevPosts, newPost]);\n      setPostTitle('');\n      setPostBody('');\n      navigate('/');\n    } catch (err) {\n      console.log(`Error ${err.message}`);\n    }\n  };\n  const handleUserInfoSubmit = async e => {\n    try {\n      // Check if the username is already taken\n      const querySnapshot = await getDocs(query(collection(database, 'usernames'), where('username', '==', newUsername)));\n      if (!querySnapshot.empty) {\n        alert(\"Username Taken\");\n      } else {\n        // Update user profile information\n        const querySnapshot = await getDocs(query(collection(database, 'usernames'), where('username', '==', usernameInput)));\n        if (!querySnapshot.empty) {\n          querySnapshot.forEach(async doc => {\n            const userRef = doc.ref;\n            // Update the 'profileImg' field in the user document\n            await updateDoc(userRef, {\n              username: newUsername,\n              bio: bio,\n              name: name\n            });\n            setBio(bio);\n            setUsernameInput(newUsername);\n            setName(name);\n\n            // Update the username in user's posts\n            const updatedMyPosts = myPost.map(post => {\n              if (post.username === usernameInput) {\n                return {\n                  ...post,\n                  username: newUsername\n                };\n              }\n              return post;\n            });\n            setMyPost(updatedMyPosts);\n            alert(\"Profile saved\");\n          });\n        }\n        setEditingProfile(false);\n        navigate('/mypost');\n      }\n    } catch (error) {\n      alert(\"Username taken or invalid input. Please try again.\");\n      console.log(error.message);\n    }\n  };\n  const handleProfileImgSubmit = async e => {\n    e.preventDefault();\n    try {\n      const querySnapshot = await getDocs(query(collection(database, 'usernames'), where('username', '==', usernameInput)));\n      if (!querySnapshot.empty) {\n        querySnapshot.forEach(async doc => {\n          const userRef = doc.ref;\n\n          // Update the 'profileImg' field in the user document\n          await updateDoc(userRef, {\n            profileImg: userImg\n          });\n          alert(\"user img changed\");\n        });\n      }\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  const handleEdit = async id => {\n    const datetime = format(new Date(), 'MMMM dd, yyyy pp');\n    const updatedPost = {\n      id,\n      username: usernameInput,\n      // Use usernameInput instead of emailInput\n      title: editTitle,\n      datetime,\n      body: editBody\n    };\n    try {\n      const querySnapshot = await getDocs(query(collection(database, 'posts'), where('id', '==', id)));\n      if (!querySnapshot.empty) {\n        querySnapshot.forEach(async doc => {\n          await updateDoc(doc.ref, updatedPost); // Use doc.ref to get the document reference\n        });\n      }\n\n      setPosts(prevPosts => prevPosts.map(post => post.id === id ? updatedPost : post));\n      setEditTitle('');\n      setEditBody('');\n      navigate('/');\n    } catch (err) {\n      console.log(`Error: ${err.message}`);\n    }\n  };\n  const handleImageChange = async e => {\n    if (e.target.files.length) {\n      const imageFile = e.target.files[0];\n      try {\n        // Upload the image to Firebase Storage\n        const storageRef = ref(storage, `${usernameInput}/` + imageFile.name);\n        await uploadBytes(storageRef, imageFile);\n\n        // Get the download URL for the uploaded image\n        const downloadURL = await getDownloadURL(storageRef);\n        setSelectedImage(downloadURL); // Update the selectedImage state\n      } catch (error) {\n        console.error('Error uploading image:', error);\n      }\n    }\n  };\n  const handleUserImg = async e => {\n    if (e.target.files.length) {\n      const imageFile = e.target.files[0];\n      try {\n        // Upload the image to Firebase Storage\n        const storageRef = ref(storage, `${usernameInput}/` + imageFile.name);\n        await uploadBytes(storageRef, imageFile);\n\n        // Get the download URL for the uploaded image\n        const downloadURL = await getDownloadURL(storageRef);\n        setUserImg(downloadURL); // Update the selectedImage state\n        localStorage.setItem('userimg', downloadURL);\n      } catch (error) {\n        console.error('Error uploading image:', error);\n      }\n    }\n  };\n  const handleDelete = async postId => {\n    try {\n      const querySnapshot = await getDocs(query(collection(database, 'posts'), where('id', '==', postId)));\n      if (!querySnapshot.empty) {\n        querySnapshot.forEach(async doc => {\n          await deleteDoc(doc.ref); // Use doc.ref to get the document reference\n        });\n      }\n\n      // Update state by removing the deleted post\n      setPosts(prevPosts => prevPosts.filter(post => post.id !== postId));\n      navigate(\"/\");\n    } catch (err) {\n      console.log(`Error ${err.message}`);\n    }\n  };\n  const handleSignOut = e => {\n    e.preventDefault();\n    auth.signOut().then(() => {\n      setIsLoggedIn(false);\n      setEmailInput('');\n      setUsernameInput('');\n      setPasswordInput('');\n      setUserImg('');\n      localStorage.setItem('username', '');\n      localStorage.setItem('userimg', '');\n      alert(\"You were signed out.\");\n    });\n  };\n  const handleSignIn = async e => {\n    try {\n      await signInWithEmailAndPassword(auth, emailInput, passwordInput);\n\n      // Retrieve the username from Firestore using the email\n      const querySnapshot = await getDocs(query(collection(database, 'usernames'), where('userId', '==', auth.currentUser.uid)));\n      if (!querySnapshot.empty) {\n        querySnapshot.forEach(doc => {\n          const userData = doc.data();\n          console.log('User Data:', userData);\n          setUsernameInput(userData.username);\n          setUser({\n            userData\n          });\n        });\n      }\n      console.log(user);\n      setIsLoggedIn(true);\n      setPasswordInput('');\n      navigate(\"/\");\n    } catch (error) {\n      alert(\"Invalid username or password. Please try again.\");\n      console.log(error.message);\n    }\n  };\n  const handleSignUp = async e => {\n    try {\n      // Check if the username is already taken\n      const querySnapshot = await getDocs(query(collection(database, 'usernames'), where('username', '==', usernameInput)));\n      if (!querySnapshot.empty) {\n        alert(\"Username Taken\");\n      } else {\n        // Sign up the user using Firebase authentication\n        await createUserWithEmailAndPassword(auth, emailInput, passwordInput);\n\n        // Add user information to Firestore collection\n        const userCollection = collection(database, 'usernames'); // 'usernames' is the name of your collection\n        const newUser = {\n          userId: auth.currentUser.uid,\n          // Firebase UID of the user\n          username: usernameInput\n        };\n        await addDoc(userCollection, newUser);\n        setUser({\n          newUser\n        });\n        setIsSigningUp(false);\n        setIsLoggedIn(true);\n        alert(\"You were signed up.\");\n        navigate('/');\n      }\n    } catch (error) {\n      alert(\"Username taken or invalid input. Please try again.\");\n      console.log(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!isLoggedIn && !isSigningUp && !isLoading && /*#__PURE__*/_jsxDEV(SignIn, {\n      handleSignIn: handleSignIn,\n      setEmailInput: setEmailInput,\n      emailInput: emailInput,\n      passwordInput: passwordInput,\n      setPasswordInput: setPasswordInput,\n      setIsSigningUp: setIsSigningUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 11\n    }, this), isSigningUp && /*#__PURE__*/_jsxDEV(SignUp, {\n      usernameInput: usernameInput,\n      setUsernameInput: setUsernameInput,\n      handleSignUp: handleSignUp,\n      setEmailInput: setEmailInput,\n      passwordInput: passwordInput,\n      setPasswordInput: setPasswordInput,\n      emailInput: emailInput,\n      setIsSigningUp: setIsSigningUp,\n      setIsLoggedIn: setIsLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 11\n    }, this), isLoggedIn && !isSigningUp && /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Layout, {\n          search: search,\n          setSearch: setSearch,\n          usernameInput: usernameInput,\n          userImg: userImg,\n          editingProfile: editingProfile,\n          setEditingProfile: setEditingProfile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 22\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            posts: searchResults,\n            usernameInput: usernameInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"myPost\",\n          element: /*#__PURE__*/_jsxDEV(MyPostDisplay, {\n            posts: searchResults,\n            usernameInput: usernameInput,\n            myPost: myPost,\n            userImg: userImg,\n            bio: bio,\n            name: name,\n            setEditingProfile: setEditingProfile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/myPost/editProfile\",\n          element: /*#__PURE__*/_jsxDEV(EditProfile, {\n            handleUserInfoSubmit: handleUserInfoSubmit,\n            setUserImg: setUserImg,\n            user: user,\n            setBio: setBio,\n            setName: setName,\n            setEditingProfile: setEditingProfile,\n            newUsername: newUsername,\n            setNewUsername: setNewUsername,\n            bio: bio,\n            userImg: userImg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"post\",\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            index: true,\n            element: /*#__PURE__*/_jsxDEV(NewPost, {\n              handleImageChange: handleImageChange,\n              handleSubmit: handleSubmit,\n              postTitle: postTitle,\n              setPostTitle: setPostTitle,\n              postBody: postBody,\n              setPostBody: setPostBody,\n              setSelectedImage: setSelectedImage,\n              selectedImage: selectedImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/post/edit/:id\",\n            element: /*#__PURE__*/_jsxDEV(EditPost, {\n              posts: posts,\n              handleEdit: handleEdit,\n              editTitle: editTitle,\n              setEditTitle: setEditTitle,\n              editBody: editBody,\n              setEditBody: setEditBody\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \":id\",\n            element: /*#__PURE__*/_jsxDEV(PostPage, {\n              usernameInput: usernameInput,\n              posts: posts,\n              handleDelete: handleDelete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"settings\",\n          element: /*#__PURE__*/_jsxDEV(Settings, {\n            handleSignOut: handleSignOut,\n            handleUserImg: handleUserImg,\n            handleProfileImgSubmit: handleProfileImgSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Missing, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"H+vcNLn44TFh709iIWR0dsnarGI=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Layout","Home","NewPost","PostPage","Settings","Missing","SignIn","SignUp","MyPostDisplay","EditPost","EditProfile","Route","Routes","useNavigate","useState","useEffect","format","auth","database","createUserWithEmailAndPassword","signInWithEmailAndPassword","getDocs","addDoc","collection","query","where","updateDoc","deleteDoc","storage","ref","uploadBytes","getDownloadURL","v4","uuidv4","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","posts","setPosts","search","setSearch","searchResults","setSearchResults","postTitle","setPostTitle","postBody","setPostBody","editTitle","setEditTitle","editBody","setEditBody","navigate","emailInput","setEmailInput","usernameInput","setUsernameInput","passwordInput","setPasswordInput","isLoggedIn","setIsLoggedIn","myPost","setMyPost","user","setUser","isSigningUp","setIsSigningUp","isLoading","setIsLoading","selectedImage","setSelectedImage","userImg","setUserImg","name","setName","bio","setBio","editingProfile","setEditingProfile","newUsername","setNewUsername","fetchPosts","postCollection","querySnapshot","fetchedPosts","forEach","doc","push","data","console","log","window","addEventListener","handlePageReload","removeEventListener","e","preventDefault","fetchUser","empty","docs","userData","localStorage","setItem","profileImg","error","storedIsLoggedIn","getItem","storedUsername","StoredUserImg","StoredUserData","timeout","setTimeout","clearTimeout","toString","filteredResults","filter","post","body","toLowerCase","includes","title","userFilteredResults","username","reverse","handleSubmit","id","datetime","Date","newPost","imageUrl","prevPosts","err","message","handleUserInfoSubmit","alert","userRef","updatedMyPosts","map","handleProfileImgSubmit","handleEdit","updatedPost","handleImageChange","target","files","length","imageFile","storageRef","downloadURL","handleUserImg","handleDelete","postId","handleSignOut","signOut","then","handleSignIn","currentUser","uid","handleSignUp","userCollection","newUser","userId","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","index","_c","$RefreshReg$"],"sources":["/Users/marcos/Desktop/MJ-Blog-Application/src/App.js"],"sourcesContent":["import Layout from './Layout';\nimport Home from './Home';\nimport NewPost from './NewPost';\nimport PostPage from './PostPage';\nimport Settings from './Settings';\nimport Missing from './Missing';\nimport SignIn from './SignIn';\nimport SignUp from './SignUp';\nimport MyPostDisplay from './MyPostDisplay';\nimport EditPost from './EditPost';\nimport EditProfile from './EditProfile';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport { auth, database } from './data/FireBase';\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { getDocs, addDoc, collection, query, where, updateDoc, deleteDoc} from 'firebase/firestore';\nimport { storage } from './data/FireBase';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\n//unique ids\nimport { v4 as uuidv4 } from 'uuid';\n\n\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [search, setSearch] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [postTitle, setPostTitle] = useState('');\n  const [postBody, setPostBody] = useState('');\n  const [editTitle, setEditTitle] = useState('');\n  const [editBody, setEditBody] = useState('');\n  const navigate = useNavigate();\n  const [emailInput, setEmailInput] = useState('');\n  const [usernameInput, setUsernameInput] = useState('');\n  const [passwordInput, setPasswordInput] = useState('');\n  const [isLoggedIn , setIsLoggedIn] = useState(false)\n  const [myPost, setMyPost] = useState([]);\n  const [user, setUser] = useState([]);\n  const [isSigningUp, setIsSigningUp] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedImage, setSelectedImage] = useState('');\n  const [userImg, setUserImg] = useState('/user.png');\n  const [name, setName] = useState('');\n  const [bio, setBio] = useState('');\n  const [editingProfile, setEditingProfile] = useState(false);\n  const [newUsername, setNewUsername] = useState('');\n\n  \n  \n\n\n  \n  useEffect(() => {\n    const fetchPosts = async () => {\n      const postCollection = collection(database, 'posts');\n      const querySnapshot = await getDocs(postCollection);\n      \n      const fetchedPosts = [];\n      querySnapshot.forEach((doc) => {\n        fetchedPosts.push(doc.data());\n\n      });\n      setPosts(fetchedPosts);\n      console.log(fetchedPosts)\n      \n      \n    \n    };\n\n    fetchPosts();\n    \n  }, []);\n\n  useEffect(() => {\n    // Detect page reload\n    window.addEventListener('beforeunload', handlePageReload);\n\n    // Cleanup when the component unmounts\n    return () => {\n      window.removeEventListener('beforeunload', handlePageReload);\n    };\n     // eslint-disable-next-line\n  }, []);\n   \n  const handlePageReload = (e) => {\n    // Prevent the default browser dialog\n    e.preventDefault();\n\n    // Redirect to the home page\n    navigate('/');\n  };\n  \n \n\n\n  useEffect(() => {\n\n    if (isLoggedIn) {\n      const fetchUser = async () => {\n        try {\n          const querySnapshot = await getDocs(\n            query(collection(database, 'usernames'), where('username', '==', usernameInput))\n          );\n        \n          if (!querySnapshot.empty && !editingProfile) {\n            // Since there could be multiple matching documents, let's consider the first one\n            const doc = querySnapshot.docs[0];\n            const userData = doc.data();\n            setUser(userData);\n            localStorage.setItem('userdata', userData);\n            if (userData.profileImg != null) {\n              setUserImg(userData.profileImg)\n              localStorage.setItem('userimg', userData.profileImg);\n            }\n            else {\n              localStorage.setItem('userimg', 'user.png');\n            }\n            setBio(userData.bio);\n            setName(userData.name);\n            console.log(userData);\n\n          }\n        } catch (error) {\n          console.error('Error fetching user:', error);\n        }\n      };\n  \n      fetchUser();\n    }\n    \n  }, [usernameInput, isLoggedIn, editingProfile,]);\n \n  \n  useEffect(()  => {\n    \n    const storedIsLoggedIn = localStorage.getItem('isLoggedIn');\n    if (storedIsLoggedIn === 'true') {\n      setIsLoggedIn(true);\n      const storedUsername = localStorage.getItem('username');\n      setUsernameInput(storedUsername);\n      const StoredUserImg = localStorage.getItem('userimg');\n      if (StoredUserImg != null) {\n        setUserImg(StoredUserImg);\n      }\n      const StoredUserData = localStorage.getItem('userdata');\n      if (StoredUserData != null) {\n        setUserImg(StoredUserData);\n      }\n\n  }\n\n\n\n    \n\n    // Simulate a 2-second timeout before setting isLoading to false\n    const timeout = setTimeout(() => {\n      setIsLoading(false);\n    }, 2000);\n    return () => clearTimeout(timeout); // Cleanup the timeout on component unmount\n  }, []);\n  \n  \n  // Save isLoggedIn and current username to local storage whenever they change\n  \n  \n  useEffect(() => {\n    localStorage.setItem('isLoggedIn', isLoggedIn.toString());\n    localStorage.setItem('username', usernameInput);\n  }, [isLoggedIn, usernameInput]);\n\n  \n  useEffect(() => {\n    const filteredResults = posts.filter((post) =>\n      ((post.body).toLowerCase()).includes(search.toLowerCase())\n      || ((post.title).toLowerCase()).includes(search.toLowerCase()));\n\n      const userFilteredResults = filteredResults.filter(\n        (post) => post.username === usernameInput\n      );\n\n    setSearchResults(filteredResults.reverse());\n    setMyPost(userFilteredResults);\n  }, [posts, search, usernameInput])\n\n  const handleSubmit = async(e) => {\n    e.preventDefault();\n    \n    const id = uuidv4();\n    const datetime = format(new Date(), 'MMMM dd, yyyy pp');\n    const newPost = { id, username: usernameInput, title: postTitle, datetime, body: postBody, imageUrl: selectedImage  };\n    try {\n      const postCollection = collection(database, 'posts');\n      await addDoc(postCollection, newPost);\n  \n      // Update state with the new post\n    setPosts((prevPosts) => [...prevPosts, newPost]);\n    setPostTitle('');\n    setPostBody('');\n    navigate('/');  \n    \n    \n    } catch (err) {\n      console.log(`Error ${err.message}`);\n    }\n\n  }\n\n  const handleUserInfoSubmit = async (e) => {\n    try {\n      // Check if the username is already taken\n      const querySnapshot = await getDocs(query(collection(database, 'usernames'), where('username', '==', newUsername)));\n      if (!querySnapshot.empty) {\n        alert(\"Username Taken\");\n      } else {\n        // Update user profile information\n        const querySnapshot = await getDocs(query(collection(database, 'usernames'), where('username', '==', usernameInput)));\n        if (!querySnapshot.empty) {\n          querySnapshot.forEach(async (doc) => {\n            const userRef = doc.ref;\n            // Update the 'profileImg' field in the user document\n            await updateDoc(userRef, { username: newUsername, bio: bio, name: name });\n            setBio(bio);\n            setUsernameInput(newUsername);\n            setName(name);\n  \n            // Update the username in user's posts\n            const updatedMyPosts = myPost.map((post) => {\n              if (post.username === usernameInput) {\n                return { ...post, username: newUsername };\n              }\n              return post;\n            });\n            setMyPost(updatedMyPosts);\n  \n            alert(\"Profile saved\");\n          });\n        }\n        setEditingProfile(false);\n        navigate('/mypost');\n      }\n    } catch (error) {\n      alert(\"Username taken or invalid input. Please try again.\");\n      console.log(error.message);\n    }\n  };\n  \n  const handleProfileImgSubmit = async (e) => {\n    e.preventDefault();\n  \n    try {\n      const querySnapshot = await getDocs(query(collection(database, 'usernames'), where('username', '==', usernameInput)));\n      if (!querySnapshot.empty) {\n        querySnapshot.forEach(async (doc) => {\n          const userRef = doc.ref;\n          \n          // Update the 'profileImg' field in the user document\n          await updateDoc(userRef, { profileImg: userImg });\n          alert(\"user img changed\");\n        });\n      }\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n\n\n  const handleEdit = async (id) => {\n    const datetime = format(new Date(), 'MMMM dd, yyyy pp');\n    const updatedPost = {\n      id,\n      username: usernameInput, // Use usernameInput instead of emailInput\n      title: editTitle,\n      datetime,\n      body: editBody,\n    };\n  \n    try {\n      const querySnapshot = await getDocs(query(collection(database, 'posts'), where('id', '==', id)));\n      \n      if (!querySnapshot.empty) {\n        querySnapshot.forEach(async (doc) => {\n          await updateDoc(doc.ref, updatedPost); // Use doc.ref to get the document reference\n        });\n      }\n  \n      setPosts((prevPosts) =>\n        prevPosts.map((post) => (post.id === id ? updatedPost : post))\n      );\n      setEditTitle('');\n      setEditBody('');\n      navigate('/');\n    } catch (err) {\n      console.log(`Error: ${err.message}`);\n    }\n  };\n  const handleImageChange = async (e) => {\n    \n    if (e.target.files.length) {\n      const imageFile = e.target.files[0];\n  \n      try {\n        // Upload the image to Firebase Storage\n        const storageRef = ref(storage, `${usernameInput}/` + imageFile.name);\n        await uploadBytes(storageRef, imageFile);\n  \n        // Get the download URL for the uploaded image\n        const downloadURL = await getDownloadURL(storageRef);\n  \n        setSelectedImage(downloadURL); // Update the selectedImage state\n      } catch (error) {\n        console.error('Error uploading image:', error);\n      }\n    }\n  };\n  const handleUserImg = async (e) => {\n    \n    if (e.target.files.length) {\n      const imageFile = e.target.files[0];\n  \n      try {\n        // Upload the image to Firebase Storage\n        const storageRef = ref(storage, `${usernameInput}/` + imageFile.name);\n        await uploadBytes(storageRef, imageFile);\n  \n        // Get the download URL for the uploaded image\n        const downloadURL = await getDownloadURL(storageRef);\n  \n        setUserImg(downloadURL); // Update the selectedImage state\n        localStorage.setItem('userimg', downloadURL);\n      } catch (error) {\n        console.error('Error uploading image:', error);\n      }\n    }\n  };\n  \n  const handleDelete = async (postId) => {\n    try {\n      const querySnapshot = await getDocs(query(collection(database, 'posts'), where('id', '==', postId)));\n      \n      if (!querySnapshot.empty) {\n        querySnapshot.forEach(async (doc) => {\n          await deleteDoc(doc.ref); // Use doc.ref to get the document reference\n        });\n      }\n      \n      // Update state by removing the deleted post\n      setPosts((prevPosts) => prevPosts.filter(post => post.id !== postId));\n      navigate(\"/\");\n    } catch (err) {\n      console.log(`Error ${err.message}`);\n    }\n  };\n  \n  const handleSignOut = (e) => {\n    e.preventDefault();\n    auth.signOut().then(() => {\n      setIsLoggedIn(false);\n      setEmailInput('');\n      setUsernameInput('');\n      setPasswordInput('');\n      setUserImg('');\n      localStorage.setItem('username', '');\n      localStorage.setItem('userimg', '');\n      alert(\"You were signed out.\");\n    });\n  };\n   \n  const handleSignIn = async (e) => {\n    try {\n      await signInWithEmailAndPassword(auth, emailInput, passwordInput);\n  \n      // Retrieve the username from Firestore using the email\n      const querySnapshot = await getDocs(query(collection(database, 'usernames'), where('userId', '==',auth.currentUser.uid)));\n      if (!querySnapshot.empty) {\n        querySnapshot.forEach((doc) => {\n          const userData = doc.data();\n          console.log('User Data:', userData);\n          setUsernameInput(userData.username);\n          setUser({userData});\n          \n        });\n      }\n      console.log(user);\n      setIsLoggedIn(true);\n      setPasswordInput('');\n      navigate(\"/\");\n    } catch (error) {\n      alert(\"Invalid username or password. Please try again.\");\n      console.log(error.message);\n    }\n  };\n  \n  \n    \n  const handleSignUp = async (e) => {\n    try {\n      // Check if the username is already taken\n      const querySnapshot = await getDocs(query(collection(database, 'usernames'), where('username', '==', usernameInput)));\n      if (!querySnapshot.empty) {\n        alert(\"Username Taken\");\n      } else {\n        // Sign up the user using Firebase authentication\n        await createUserWithEmailAndPassword(auth, emailInput, passwordInput);\n  \n        // Add user information to Firestore collection\n        const userCollection = collection(database, 'usernames'); // 'usernames' is the name of your collection\n        const newUser = {\n          userId: auth.currentUser.uid, // Firebase UID of the user\n          username: usernameInput,\n        };\n        await addDoc(userCollection, newUser);\n        setUser({newUser});\n        setIsSigningUp(false);\n        setIsLoggedIn(true);\n        \n        alert(\"You were signed up.\");\n        navigate('/');\n      }\n    } catch (error) {\n      alert(\"Username taken or invalid input. Please try again.\");\n      console.log(error.message);\n    }\n  };\n  \n    \n    return (\n      <>\n       \n        {!isLoggedIn && !isSigningUp && !isLoading && (\n          <SignIn\n            handleSignIn={handleSignIn}\n            setEmailInput={setEmailInput}\n            emailInput = {emailInput}\n            passwordInput={passwordInput}\n            setPasswordInput={setPasswordInput}\n            setIsSigningUp={setIsSigningUp}\n           \n          />\n        )}\n      \n        {isSigningUp && (\n          <SignUp\n            usernameInput= {usernameInput}\n            setUsernameInput= { setUsernameInput}\n            handleSignUp={handleSignUp}\n            setEmailInput={setEmailInput}\n            passwordInput={passwordInput}\n            setPasswordInput={setPasswordInput}\n            emailInput={emailInput}\n            setIsSigningUp={setIsSigningUp}\n            setIsLoggedIn={setIsLoggedIn}\n          />\n        )}\n    \n    {isLoggedIn && !isSigningUp && (\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<Layout search={search} setSearch={setSearch} usernameInput={usernameInput} userImg={userImg} editingProfile={editingProfile} setEditingProfile={setEditingProfile} />}\n          >\n            <Route index element={<Home posts={searchResults} usernameInput={usernameInput} />} />\n            <Route path=\"myPost\" element={<MyPostDisplay posts={searchResults} usernameInput={usernameInput} myPost={myPost} userImg={userImg} bio={bio} name={name}  setEditingProfile={setEditingProfile}/>} />\n            <Route path=\"/myPost/editProfile\" element={<EditProfile handleUserInfoSubmit={handleUserInfoSubmit} setUserImg={setUserImg} user={user} setBio={setBio} setName={setName} setEditingProfile={setEditingProfile} newUsername={newUsername} setNewUsername={setNewUsername} bio={bio} userImg={userImg}  />} />\n            <Route path=\"post\">\n              <Route\n                index\n                element={\n                  <NewPost\n                    handleImageChange= {handleImageChange}\n                    handleSubmit={handleSubmit}\n                    postTitle={postTitle}\n                    setPostTitle={setPostTitle}\n                    postBody={postBody}\n                    setPostBody={setPostBody}\n                    setSelectedImage={setSelectedImage}\n                    selectedImage={selectedImage}\n                  />\n                }\n              />\n              <Route\n                path=\"/post/edit/:id\"\n                element={(\n                  <EditPost\n                    posts={posts}\n                    handleEdit={handleEdit}\n                    editTitle={editTitle}\n                    setEditTitle={setEditTitle}\n                    editBody={editBody}\n                    setEditBody={setEditBody}\n                  />\n                )}\n              />\n              <Route\n                path=\":id\"\n                element={<PostPage usernameInput={usernameInput} posts={posts} handleDelete={handleDelete} />}\n              />\n            </Route>\n\n            <Route path=\"settings\" element={<Settings handleSignOut={handleSignOut} handleUserImg={handleUserImg} handleProfileImgSubmit={handleProfileImgSubmit}/>} />\n\n            <Route path=\"*\" element={<Missing />} />\n          </Route>\n        </Routes>\n      )}\n    </>\n  );\n}\n  \nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}