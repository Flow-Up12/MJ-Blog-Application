{"ast":null,"code":"var _jsxFileName = \"/Users/marcos/Desktop/MJ-Blog-Application/src/App.js\",\n  _s = $RefreshSig$();\nimport Layout from './Layout';\nimport Home from './Home';\nimport NewPost from './NewPost';\nimport PostPage from './PostPage';\nimport Settings from './Settings';\nimport Missing from './Missing';\nimport SignIn from './SignIn';\nimport SignUp from './SignUp';\nimport MyPostDisplay from './MyPostDisplay';\nimport EditPost from './EditPost';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport { auth, database } from './data/FireBase';\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { getDocs, addDoc, collection, query, where, updateDoc, deleteDoc } from 'firebase/firestore';\nimport { storage } from './data/FireBase';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\n//unique ids\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [search, setSearch] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [postTitle, setPostTitle] = useState('');\n  const [postBody, setPostBody] = useState('');\n  const [editTitle, setEditTitle] = useState('');\n  const [editBody, setEditBody] = useState('');\n  const navigate = useNavigate();\n  const [emailInput, setEmailInput] = useState('');\n  const [usernameInput, setUsernameInput] = useState('');\n  const [passwordInput, setPasswordInput] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [myPost, setMyPost] = useState([]);\n  const [user, setUser] = useState([]);\n  const [isSigningUp, setIsSigningUp] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedImage, setSelectedImage] = useState('');\n  const [userImg, setUserImg] = useState('/user.png');\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const postCollection = collection(database, 'posts');\n      const querySnapshot = await getDocs(postCollection);\n      const fetchedPosts = [];\n      querySnapshot.forEach(doc => {\n        fetchedPosts.push(doc.data());\n      });\n      setPosts(fetchedPosts);\n      console.log(fetchedPosts);\n    };\n    fetchPosts();\n  }, []);\n  useEffect(() => {\n    const storedIsLoggedIn = localStorage.getItem('isLoggedIn');\n    if (storedIsLoggedIn === 'true') {\n      setIsLoggedIn(true);\n      const storedUsername = localStorage.getItem('username');\n      setUsernameInput(storedUsername);\n      const StoredUserImg = localStorage.getItem('userimg');\n      if (StoredUserImg != null) {\n        setUserImg(StoredUserImg);\n      }\n    }\n\n    // Simulate a 2-second timeout before setting isLoading to false\n    const timeout = setTimeout(() => {\n      setIsLoading(false);\n    }, 2000);\n    return () => clearTimeout(timeout); // Cleanup the timeout on component unmount\n  }, []);\n\n  // Save isLoggedIn and current username to local storage whenever they change\n\n  useEffect(() => {\n    localStorage.setItem('isLoggedIn', isLoggedIn.toString());\n    localStorage.setItem('username', usernameInput);\n  }, [isLoggedIn, usernameInput]);\n  useEffect(() => {\n    const filteredResults = posts.filter(post => post.body.toLowerCase().includes(search.toLowerCase()) || post.title.toLowerCase().includes(search.toLowerCase()));\n    const userFilteredResults = filteredResults.filter(post => post.username === usernameInput);\n    setSearchResults(filteredResults.reverse());\n    setMyPost(userFilteredResults);\n  }, [posts, search, usernameInput]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const id = uuidv4();\n    const datetime = format(new Date(), 'MMMM dd, yyyy pp');\n    const newPost = {\n      id,\n      username: usernameInput,\n      title: postTitle,\n      datetime,\n      body: postBody,\n      imageUrl: selectedImage\n    };\n    try {\n      const postCollection = collection(database, 'posts');\n      await addDoc(postCollection, newPost);\n\n      // Update state with the new post\n      setPosts(prevPosts => [...prevPosts, newPost]);\n      setPostTitle('');\n      setPostBody('');\n      navigate('/');\n    } catch (err) {\n      console.log(`Error ${err.message}`);\n    }\n  };\n  const handleProfileImgSubmit = async e => {\n    e.preventDefault();\n    try {\n      const querySnapshot = await getDocs(query(collection(database, 'usernames'), where('username', '==', usernameInput)));\n      if (!querySnapshot.empty) {\n        querySnapshot.forEach(async doc => {\n          const userRef = doc.ref;\n\n          // Update the 'profileImg' field in the user document\n          await updateDoc(userRef, {\n            profileImg: userImg\n          });\n          alert(\"user img changed\");\n        });\n      }\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  const handleEdit = async id => {\n    const datetime = format(new Date(), 'MMMM dd, yyyy pp');\n    const updatedPost = {\n      id,\n      username: usernameInput,\n      // Use usernameInput instead of emailInput\n      title: editTitle,\n      datetime,\n      body: editBody\n    };\n    try {\n      const querySnapshot = await getDocs(query(collection(database, 'posts'), where('id', '==', id)));\n      if (!querySnapshot.empty) {\n        querySnapshot.forEach(async doc => {\n          await updateDoc(doc.ref, updatedPost); // Use doc.ref to get the document reference\n        });\n      }\n\n      setPosts(prevPosts => prevPosts.map(post => post.id === id ? updatedPost : post));\n      setEditTitle('');\n      setEditBody('');\n      navigate('/');\n    } catch (err) {\n      console.log(`Error: ${err.message}`);\n    }\n  };\n  const handleImageChange = async e => {\n    if (e.target.files.length) {\n      const imageFile = e.target.files[0];\n      try {\n        // Upload the image to Firebase Storage\n        const storageRef = ref(storage, `${usernameInput}/` + imageFile.name);\n        await uploadBytes(storageRef, imageFile);\n\n        // Get the download URL for the uploaded image\n        const downloadURL = await getDownloadURL(storageRef);\n        setSelectedImage(downloadURL); // Update the selectedImage state\n      } catch (error) {\n        console.error('Error uploading image:', error);\n      }\n    }\n  };\n  const handleUserImg = async e => {\n    if (e.target.files.length) {\n      const imageFile = e.target.files[0];\n      try {\n        // Upload the image to Firebase Storage\n        const storageRef = ref(storage, `${usernameInput}/` + imageFile.name);\n        await uploadBytes(storageRef, imageFile);\n\n        // Get the download URL for the uploaded image\n        const downloadURL = await getDownloadURL(storageRef);\n        setUserImg(downloadURL); // Update the selectedImage state\n        localStorage.setItem('username', usernameInput);\n      } catch (error) {\n        console.error('Error uploading image:', error);\n      }\n    }\n  };\n  const handleDelete = async postId => {\n    try {\n      const querySnapshot = await getDocs(query(collection(database, 'posts'), where('id', '==', postId)));\n      if (!querySnapshot.empty) {\n        querySnapshot.forEach(async doc => {\n          await deleteDoc(doc.ref); // Use doc.ref to get the document reference\n        });\n      }\n\n      // Update state by removing the deleted post\n      setPosts(prevPosts => prevPosts.filter(post => post.id !== postId));\n      navigate(\"/\");\n    } catch (err) {\n      console.log(`Error ${err.message}`);\n    }\n  };\n  const handleSignOut = e => {\n    e.preventDefault();\n    auth.signOut().then(() => {\n      setIsLoggedIn(false);\n      setEmailInput('');\n      setUsernameInput('');\n      setPasswordInput('');\n      alert(\"You were signed out.\");\n    });\n  };\n  const handleSignIn = async e => {\n    try {\n      await signInWithEmailAndPassword(auth, emailInput, passwordInput);\n\n      // Retrieve the username from Firestore using the email\n      const querySnapshot = await getDocs(query(collection(database, 'usernames'), where('userId', '==', auth.currentUser.uid)));\n      if (!querySnapshot.empty) {\n        querySnapshot.forEach(doc => {\n          const userData = doc.data();\n          console.log('User Data:', userData);\n          setUsernameInput(userData.username);\n          setUser({\n            userData\n          });\n        });\n      }\n      console.log(user);\n      setIsLoggedIn(true);\n      setPasswordInput('');\n      navigate(\"/\");\n    } catch (error) {\n      alert(\"Invalid username or password. Please try again.\");\n      console.log(error.message);\n    }\n  };\n  const handleSignUp = async e => {\n    try {\n      // Check if the username is already taken\n      const querySnapshot = await getDocs(query(collection(database, 'usernames'), where('username', '==', usernameInput)));\n      if (!querySnapshot.empty) {\n        alert(\"Username Taken\");\n      } else {\n        // Sign up the user using Firebase authentication\n        await createUserWithEmailAndPassword(auth, emailInput, passwordInput);\n\n        // Add user information to Firestore collection\n        const userCollection = collection(database, 'usernames'); // 'usernames' is the name of your collection\n        const newUser = {\n          userId: auth.currentUser.uid,\n          // Firebase UID of the user\n          username: usernameInput\n        };\n        await addDoc(userCollection, newUser);\n        setUser({\n          newUser\n        });\n        setIsSigningUp(false);\n        setIsLoggedIn(true);\n        alert(\"You were signed up.\");\n        navigate('/');\n      }\n    } catch (error) {\n      alert(\"Username taken or invalid input. Please try again.\");\n      console.log(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!isLoggedIn && !isSigningUp && !isLoading && /*#__PURE__*/_jsxDEV(SignIn, {\n      handleSignIn: handleSignIn,\n      setEmailInput: setEmailInput,\n      emailInput: emailInput,\n      passwordInput: passwordInput,\n      setPasswordInput: setPasswordInput,\n      setIsSigningUp: setIsSigningUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 11\n    }, this), isSigningUp && /*#__PURE__*/_jsxDEV(SignUp, {\n      usernameInput: usernameInput,\n      setUsernameInput: setUsernameInput,\n      handleSignUp: handleSignUp,\n      setEmailInput: setEmailInput,\n      passwordInput: passwordInput,\n      setPasswordInput: setPasswordInput,\n      emailInput: emailInput,\n      setIsSigningUp: setIsSigningUp,\n      setIsLoggedIn: setIsLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 11\n    }, this), isLoggedIn && !isSigningUp && /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Layout, {\n          search: search,\n          setSearch: setSearch,\n          usernameInput: usernameInput,\n          userImg: userImg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 22\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            posts: searchResults,\n            usernameInput: usernameInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"myPost\",\n          element: /*#__PURE__*/_jsxDEV(MyPostDisplay, {\n            posts: searchResults,\n            usernameInput: usernameInput,\n            myPost: myPost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"post\",\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            index: true,\n            element: /*#__PURE__*/_jsxDEV(NewPost, {\n              handleImageChange: handleImageChange,\n              handleSubmit: handleSubmit,\n              postTitle: postTitle,\n              setPostTitle: setPostTitle,\n              postBody: postBody,\n              setPostBody: setPostBody,\n              setSelectedImage: setSelectedImage,\n              selectedImage: selectedImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/post/edit/:id\",\n            element: /*#__PURE__*/_jsxDEV(EditPost, {\n              posts: posts,\n              handleEdit: handleEdit,\n              editTitle: editTitle,\n              setEditTitle: setEditTitle,\n              editBody: editBody,\n              setEditBody: setEditBody\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \":id\",\n            element: /*#__PURE__*/_jsxDEV(PostPage, {\n              usernameInput: usernameInput,\n              posts: posts,\n              handleDelete: handleDelete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"settings\",\n          element: /*#__PURE__*/_jsxDEV(Settings, {\n            handleSignOut: handleSignOut,\n            handleUserImg: handleUserImg,\n            handleProfileImgSubmit: handleProfileImgSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Missing, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"jpO2OJVDPQKmC9FksOpvJNyF1c8=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Layout","Home","NewPost","PostPage","Settings","Missing","SignIn","SignUp","MyPostDisplay","EditPost","Route","Routes","useNavigate","useState","useEffect","format","auth","database","createUserWithEmailAndPassword","signInWithEmailAndPassword","getDocs","addDoc","collection","query","where","updateDoc","deleteDoc","storage","ref","uploadBytes","getDownloadURL","v4","uuidv4","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","posts","setPosts","search","setSearch","searchResults","setSearchResults","postTitle","setPostTitle","postBody","setPostBody","editTitle","setEditTitle","editBody","setEditBody","navigate","emailInput","setEmailInput","usernameInput","setUsernameInput","passwordInput","setPasswordInput","isLoggedIn","setIsLoggedIn","myPost","setMyPost","user","setUser","isSigningUp","setIsSigningUp","isLoading","setIsLoading","selectedImage","setSelectedImage","userImg","setUserImg","fetchPosts","postCollection","querySnapshot","fetchedPosts","forEach","doc","push","data","console","log","storedIsLoggedIn","localStorage","getItem","storedUsername","StoredUserImg","timeout","setTimeout","clearTimeout","setItem","toString","filteredResults","filter","post","body","toLowerCase","includes","title","userFilteredResults","username","reverse","handleSubmit","e","preventDefault","id","datetime","Date","newPost","imageUrl","prevPosts","err","message","handleProfileImgSubmit","empty","userRef","profileImg","alert","error","handleEdit","updatedPost","map","handleImageChange","target","files","length","imageFile","storageRef","name","downloadURL","handleUserImg","handleDelete","postId","handleSignOut","signOut","then","handleSignIn","currentUser","uid","userData","handleSignUp","userCollection","newUser","userId","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","index","_c","$RefreshReg$"],"sources":["/Users/marcos/Desktop/MJ-Blog-Application/src/App.js"],"sourcesContent":["import Layout from './Layout';\nimport Home from './Home';\nimport NewPost from './NewPost';\nimport PostPage from './PostPage';\nimport Settings from './Settings';\nimport Missing from './Missing';\nimport SignIn from './SignIn';\nimport SignUp from './SignUp';\nimport MyPostDisplay from './MyPostDisplay';\nimport EditPost from './EditPost';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport { auth, database } from './data/FireBase';\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { getDocs, addDoc, collection, query, where, updateDoc, deleteDoc} from 'firebase/firestore';\nimport { storage } from './data/FireBase';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\n//unique ids\nimport { v4 as uuidv4 } from 'uuid';\n\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [search, setSearch] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [postTitle, setPostTitle] = useState('');\n  const [postBody, setPostBody] = useState('');\n  const [editTitle, setEditTitle] = useState('');\n  const [editBody, setEditBody] = useState('');\n  const navigate = useNavigate();\n  const [emailInput, setEmailInput] = useState('');\n  const [usernameInput, setUsernameInput] = useState('');\n  const [passwordInput, setPasswordInput] = useState('');\n  const [isLoggedIn , setIsLoggedIn] = useState(false)\n  const [myPost, setMyPost] = useState([]);\n  const [user, setUser] = useState([]);\n  const [isSigningUp, setIsSigningUp] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedImage, setSelectedImage] = useState('');\n  const [userImg, setUserImg] = useState('/user.png');\n  \n\n  \n\n\n  \n  useEffect(() => {\n    const fetchPosts = async () => {\n      const postCollection = collection(database, 'posts');\n      const querySnapshot = await getDocs(postCollection);\n\n      const fetchedPosts = [];\n      querySnapshot.forEach((doc) => {\n        fetchedPosts.push(doc.data());\n      });\n      setPosts(fetchedPosts);\n      console.log(fetchedPosts)\n    \n    \n    };\n\n    fetchPosts();\n    \n  }, []);\n\n \n  \n  useEffect(() => {\n    \n    const storedIsLoggedIn = localStorage.getItem('isLoggedIn');\n    if (storedIsLoggedIn === 'true') {\n      setIsLoggedIn(true);\n      const storedUsername = localStorage.getItem('username');\n      setUsernameInput(storedUsername);\n      const StoredUserImg = localStorage.getItem('userimg');\n      if (StoredUserImg != null) {\n        setUserImg(StoredUserImg);\n      }\n      \n  }\n\n\n\n    \n\n    // Simulate a 2-second timeout before setting isLoading to false\n    const timeout = setTimeout(() => {\n      setIsLoading(false);\n    }, 2000);\n    return () => clearTimeout(timeout); // Cleanup the timeout on component unmount\n  }, []);\n  \n  \n  // Save isLoggedIn and current username to local storage whenever they change\n  \n  \n  useEffect(() => {\n    localStorage.setItem('isLoggedIn', isLoggedIn.toString());\n    localStorage.setItem('username', usernameInput);\n  }, [isLoggedIn, usernameInput]);\n\n  \n  useEffect(() => {\n    const filteredResults = posts.filter((post) =>\n      ((post.body).toLowerCase()).includes(search.toLowerCase())\n      || ((post.title).toLowerCase()).includes(search.toLowerCase()));\n\n      const userFilteredResults = filteredResults.filter(\n        (post) => post.username === usernameInput\n      );\n\n    setSearchResults(filteredResults.reverse());\n    setMyPost(userFilteredResults);\n  }, [posts, search, usernameInput])\n\n  const handleSubmit = async(e) => {\n    e.preventDefault();\n    \n    const id = uuidv4();\n    const datetime = format(new Date(), 'MMMM dd, yyyy pp');\n    const newPost = { id, username: usernameInput, title: postTitle, datetime, body: postBody, imageUrl: selectedImage  };\n    try {\n      const postCollection = collection(database, 'posts');\n      await addDoc(postCollection, newPost);\n  \n      // Update state with the new post\n    setPosts((prevPosts) => [...prevPosts, newPost]);\n    setPostTitle('');\n    setPostBody('');\n    navigate('/');  \n    \n    \n    } catch (err) {\n      console.log(`Error ${err.message}`);\n    }\n\n  }\n\n  const handleProfileImgSubmit = async (e) => {\n    e.preventDefault();\n  \n    try {\n      const querySnapshot = await getDocs(query(collection(database, 'usernames'), where('username', '==', usernameInput)));\n      if (!querySnapshot.empty) {\n        querySnapshot.forEach(async (doc) => {\n          const userRef = doc.ref;\n          \n          // Update the 'profileImg' field in the user document\n          await updateDoc(userRef, { profileImg: userImg });\n          alert(\"user img changed\");\n        });\n      }\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n\n\n  const handleEdit = async (id) => {\n    const datetime = format(new Date(), 'MMMM dd, yyyy pp');\n    const updatedPost = {\n      id,\n      username: usernameInput, // Use usernameInput instead of emailInput\n      title: editTitle,\n      datetime,\n      body: editBody,\n    };\n  \n    try {\n      const querySnapshot = await getDocs(query(collection(database, 'posts'), where('id', '==', id)));\n      \n      if (!querySnapshot.empty) {\n        querySnapshot.forEach(async (doc) => {\n          await updateDoc(doc.ref, updatedPost); // Use doc.ref to get the document reference\n        });\n      }\n  \n      setPosts((prevPosts) =>\n        prevPosts.map((post) => (post.id === id ? updatedPost : post))\n      );\n      setEditTitle('');\n      setEditBody('');\n      navigate('/');\n    } catch (err) {\n      console.log(`Error: ${err.message}`);\n    }\n  };\n  const handleImageChange = async (e) => {\n    \n    if (e.target.files.length) {\n      const imageFile = e.target.files[0];\n  \n      try {\n        // Upload the image to Firebase Storage\n        const storageRef = ref(storage, `${usernameInput}/` + imageFile.name);\n        await uploadBytes(storageRef, imageFile);\n  \n        // Get the download URL for the uploaded image\n        const downloadURL = await getDownloadURL(storageRef);\n  \n        setSelectedImage(downloadURL); // Update the selectedImage state\n      } catch (error) {\n        console.error('Error uploading image:', error);\n      }\n    }\n  };\n  const handleUserImg = async (e) => {\n    \n    if (e.target.files.length) {\n      const imageFile = e.target.files[0];\n  \n      try {\n        // Upload the image to Firebase Storage\n        const storageRef = ref(storage, `${usernameInput}/` + imageFile.name);\n        await uploadBytes(storageRef, imageFile);\n  \n        // Get the download URL for the uploaded image\n        const downloadURL = await getDownloadURL(storageRef);\n  \n        setUserImg(downloadURL); // Update the selectedImage state\n        localStorage.setItem('username', usernameInput);\n      } catch (error) {\n        console.error('Error uploading image:', error);\n      }\n    }\n  };\n  \n  const handleDelete = async (postId) => {\n    try {\n      const querySnapshot = await getDocs(query(collection(database, 'posts'), where('id', '==', postId)));\n      \n      if (!querySnapshot.empty) {\n        querySnapshot.forEach(async (doc) => {\n          await deleteDoc(doc.ref); // Use doc.ref to get the document reference\n        });\n      }\n      \n      // Update state by removing the deleted post\n      setPosts((prevPosts) => prevPosts.filter(post => post.id !== postId));\n      navigate(\"/\");\n    } catch (err) {\n      console.log(`Error ${err.message}`);\n    }\n  };\n  \n  const handleSignOut = (e) => {\n    e.preventDefault();\n    auth.signOut().then(() => {\n      setIsLoggedIn(false);\n      setEmailInput('');\n      setUsernameInput('');\n      setPasswordInput('');\n      alert(\"You were signed out.\");\n    });\n  };\n   \n  const handleSignIn = async (e) => {\n    try {\n      await signInWithEmailAndPassword(auth, emailInput, passwordInput);\n  \n      // Retrieve the username from Firestore using the email\n      const querySnapshot = await getDocs(query(collection(database, 'usernames'), where('userId', '==',auth.currentUser.uid)));\n      if (!querySnapshot.empty) {\n        querySnapshot.forEach((doc) => {\n          const userData = doc.data();\n          console.log('User Data:', userData);\n          setUsernameInput(userData.username);\n          setUser({userData});\n        });\n      }\n      console.log(user);\n      setIsLoggedIn(true);\n      setPasswordInput('');\n     \n      navigate(\"/\");\n    } catch (error) {\n      alert(\"Invalid username or password. Please try again.\");\n      console.log(error.message);\n    }\n  };\n  \n  \n    \n  const handleSignUp = async (e) => {\n    try {\n      // Check if the username is already taken\n      const querySnapshot = await getDocs(query(collection(database, 'usernames'), where('username', '==', usernameInput)));\n      if (!querySnapshot.empty) {\n        alert(\"Username Taken\");\n      } else {\n        // Sign up the user using Firebase authentication\n        await createUserWithEmailAndPassword(auth, emailInput, passwordInput);\n  \n        // Add user information to Firestore collection\n        const userCollection = collection(database, 'usernames'); // 'usernames' is the name of your collection\n        const newUser = {\n          userId: auth.currentUser.uid, // Firebase UID of the user\n          username: usernameInput,\n        };\n        await addDoc(userCollection, newUser);\n        setUser({newUser});\n        setIsSigningUp(false);\n        setIsLoggedIn(true);\n        \n        alert(\"You were signed up.\");\n        navigate('/');\n      }\n    } catch (error) {\n      alert(\"Username taken or invalid input. Please try again.\");\n      console.log(error.message);\n    }\n  };\n  \n    \n    return (\n      <>\n       \n        {!isLoggedIn && !isSigningUp && !isLoading && (\n          <SignIn\n            handleSignIn={handleSignIn}\n            setEmailInput={setEmailInput}\n            emailInput = {emailInput}\n            passwordInput={passwordInput}\n            setPasswordInput={setPasswordInput}\n            setIsSigningUp={setIsSigningUp}\n           \n          />\n        )}\n      \n        {isSigningUp && (\n          <SignUp\n            usernameInput= {usernameInput}\n            setUsernameInput= { setUsernameInput}\n            handleSignUp={handleSignUp}\n            setEmailInput={setEmailInput}\n            passwordInput={passwordInput}\n            setPasswordInput={setPasswordInput}\n            emailInput={emailInput}\n            setIsSigningUp={setIsSigningUp}\n            setIsLoggedIn={setIsLoggedIn}\n          />\n        )}\n    \n    {isLoggedIn && !isSigningUp && (\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<Layout search={search} setSearch={setSearch} usernameInput={usernameInput} userImg={userImg}/>}\n          >\n            <Route index element={<Home posts={searchResults} usernameInput={usernameInput} />} />\n            <Route path=\"myPost\" element={<MyPostDisplay posts={searchResults} usernameInput={usernameInput} myPost={myPost} />} />\n\n            <Route path=\"post\">\n              <Route\n                index\n                element={\n                  <NewPost\n                    handleImageChange= {handleImageChange}\n                    handleSubmit={handleSubmit}\n                    postTitle={postTitle}\n                    setPostTitle={setPostTitle}\n                    postBody={postBody}\n                    setPostBody={setPostBody}\n                    setSelectedImage={setSelectedImage}\n                    selectedImage={selectedImage}\n                  />\n                }\n              />\n              <Route\n                path=\"/post/edit/:id\"\n                element={(\n                  <EditPost\n                    posts={posts}\n                    handleEdit={handleEdit}\n                    editTitle={editTitle}\n                    setEditTitle={setEditTitle}\n                    editBody={editBody}\n                    setEditBody={setEditBody}\n                  />\n                )}\n              />\n              <Route\n                path=\":id\"\n                element={<PostPage usernameInput={usernameInput} posts={posts} handleDelete={handleDelete} />}\n              />\n            </Route>\n\n            <Route path=\"settings\" element={<Settings handleSignOut={handleSignOut} handleUserImg={handleUserImg} handleProfileImgSubmit={handleProfileImgSubmit}/>} />\n\n            <Route path=\"*\" element={<Missing />} />\n          </Route>\n        </Routes>\n      )}\n    </>\n  );\n}\n  \nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}